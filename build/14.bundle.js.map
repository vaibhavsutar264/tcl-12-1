{"version":3,"file":"14.bundle.js","mappings":"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","sources":["webpack://tclcpasstwentyfirstoct/./src/components/common/elements/BreadCrum.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/elements/PageSearch.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/elements/RaiseTicket.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/elements/card.tsx","webpack://tclcpasstwentyfirstoct/./src/components/modals/ModalTicketError.tsx","webpack://tclcpasstwentyfirstoct/./src/hooks/useLocales.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nimport Breadcrumbs from '@mui/material/Breadcrumbs'\nimport IconButton from '@mui/material/IconButton'\nimport InputBase from '@mui/material/InputBase'\nimport Link from '@mui/material/Link'\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext'\nimport Paper from '@mui/material/Paper'\nimport SearchIcon from '@mui/icons-material/Search'\nimport Stack from '@mui/material/Stack'\nimport Typography from '@mui/material/Typography'\nimport axios from \"axios\"\nimport useLocales from '../../../hooks/useLocales';\n\nexport const BreadCrums = ({ data }: { data: any }) => {\n    const { t } = useLocales();\n\n    return (\n        <div className=\"content__breadcrum\">\n            <Stack spacing={2} className=\"breadcrum-stack\">\n                <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\" >\n                    {[\n                        data.path.map((ele: any) =>\n                            ele.type == 'link' ? <Link underline=\"hover\" key=\"1\" color=\"inherit\" id=\"breadcrumb-color\" href={ele.linkURL}>\n                                {t<string>(ele.transName)} </Link> :\n                                <Typography key=\"3\" color=\"text.primary\">{t<string>(ele.transName)}  </Typography>\n                        )\n                    ]}\n                </Breadcrumbs>\n            </Stack>\n            <h3 className=\"content_pageTitle\">\n                {t<string>(data.path[1].transName)}\n            </h3>\n        </div>\n    )\n}\n","import { Link, Typography } from '@mui/material'\n\nimport IconButton from '@mui/material/IconButton'\nimport InputBase from '@mui/material/InputBase'\nimport Paper from '@mui/material/Paper'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { typeVar } from '../../../utils/constants'\nimport { useDispatch as useAppDispatch } from '../../../redux/store'\nimport useLocales from '../../../hooks/useLocales'\nimport { useState } from 'react'\n\nexport const PageSearch = ({ searchFn, searchPlaceholder }: { searchFn: any, searchPlaceholder: string }) => {\n    const dispatch = useAppDispatch()\n    const { t } = useLocales()\n    const [searchValue, setSearchValue] = useState('')\n    const handleSearch = async (e: any) => {\n        e.preventDefault()\n        dispatch(searchFn(searchValue))\n    }\n    const chnageEvent = async (e: any) => {\n        setSearchValue(e)\n        if (e == '' || e == null || e == undefined) {\n            dispatch(searchFn(''))\n        }\n    }\n\n    const breadcrumbs = [\n        <Link underline=\"hover\" key=\"1\" color=\"inherit\" href=\"/\">\n            {t<string>('dashboard')}\n        </Link>,\n        <Typography key=\"3\" color=\"text.primary\">\n            {t<string>('billingInvoices')}\n        </Typography>,\n    ]\n\n    return (\n        <div className=\"\">\n            <div className=\"right__elementsItem search__group\">\n                <Paper\n                    id=\"searchproducts-input\"\n                    component=\"form\"\n                    className=\"search__form\"\n                    sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        width: 350,\n                    }}\n                >\n                    <InputBase\n                        sx={{ ml: 1, flex: 1 }}\n                        onFocus={(e) => {\n                            e.target.placeholder = '';\n                        }}\n                        onBlur={(e) => {\n                            e.target.placeholder = `${t<string>('searchInvoiceNoEntity')}`\n                        }}\n                        placeholder={t<string>(searchPlaceholder)}\n                        inputProps={{\n                            'aria-label': 'Search Products, Orders and Clients',\n                            'data-testid': 'search-element',\n                        }}\n                        type=\"search\"\n                        value={searchValue}\n                        onChange={(e) => chnageEvent(e.target.value)}\n                        onKeyPress={(e) => {\n                            if (e.key === 'Enter') {\n                                e.preventDefault()\n                                handleSearch(e)\n                                // write your functionality here\n                            }\n                        }}\n                    />\n                    <IconButton\n                        data-testid=\"search-button-element\"\n                        onClick={handleSearch}\n                        type=\"button\"\n                        sx={{ p: '10px' }}\n                        aria-label=\"search\"\n                    >\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Download from '../../../assets/images/svg/download.svg';\nimport { useParams } from 'react-router-dom'\nimport {\n    Box,\n    Container,\n    List,\n    ListItem,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    Paper,\n    TextField,\n    TextareaAutosize,\n    FormGroup,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Button,\n    IconButton,\n} from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\n\nimport { useSelector } from '../../../redux/store'\nimport { dataTables } from '../../../utils/constants'\nimport { isAbsolute } from 'path'\nimport AddIcon from '@mui/icons-material/Add';\nimport ModalTicketError from '../../modals/ModalTicketError';\n\nconst RaiseTicket = ({ handleShow, showIt }: any) => {\n    const [showError, setShowError] = useState(false)\n    const handleSubmitTicket =()=>{\n        try {\n            setShowError(true)\n        } catch (error) {\n            setShowError(true)\n        }\n    }\n\n    return (\n        <>\n        <Box sx={{\n            bgcolor: '#fff',\n            boxShadow: 24,\n            height: '100vh',\n            position: 'fixed',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            width: '50%',\n            padding: '56px',\n            zIndex: 1000,\n            overflowY: 'auto',\n            transition: 'transform 350ms 0ms ease-in',\n            transform: `translateX(${showIt ? 0 : 100}%)`,\n        }} className='raise-ticket'>\n            <CloseIcon onClick={handleShow} sx={{\n                position: 'absolute',\n                top: '40px',\n                right: '40px',\n                '&:hover': {\n                    cursor: 'pointer',\n                }\n            }} />\n            <Stack>\n                <Typography variant='h5' component='h1' sx={{\n                    maxWidth: 'unset',\n                    textAlign: 'left',\n                    mb: '40px',\n                    padding: 0,\n                    fontSize: '24px',\n                    lineHeight: '22px',\n                    color: '#303030',\n                    fontWeight: 700,\n                    fontFamily: 'ubuntu',\n                }} className='raise-ticket--typography'>Raise a Ticket</Typography>\n\n                <Typography variant='h6' color='#73768A' component='h2' sx={{\n                    maxWidth: 'unset',\n                    textAlign: 'left',\n                    textTransform: 'capitalize',\n                    color: '#73768A',\n                    fontSize: '16px',\n                    lineHeight: '24px',\n                    fontFamily: 'ubuntu',\n                }} className='raise-ticket--typography'>invoice number</Typography>\n                <Typography variant='h6' component='h3' sx={{\n                    maxWidth: 'unset',\n                    textAlign: 'left',\n                    mb: '32px',\n                    color: '#000000',\n                    fontSize: '22px',\n                    lineHeight: '25px',\n                    fontWeight: 700,\n                    fontFamily: 'ubuntu',\n                }} className='raise-ticket--typography'>AM2398756710</Typography>\n\n                {/* First form starts here */}\n                <Box\n                    component=\"form\"\n                    className='raise-ticket-input'\n                    sx={{\n                        '& > :not(style)': { m: 1, ml: 0, width: '25ch' },\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        '& label': {\n                            top: '12px',\n                        },\n                        '& label:not(.MuiFormLabel-filled, .MuiInputLabel-shrink)': {\n                            top: '-3px',\n                        },\n                        '& legend': {\n                            display: 'none',\n                        }\n                    }} noValidate autoComplete=\"off\"\n                >\n                    <TextField\n                            className=''\n                            label='service ref'\n                            variant='outlined'\n                            type=\"text\"\n                            sx={{\n                                borderRadius: '10px !important',\n                                flexBasis: '40%',\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                    <TextField\n                            className=''\n                            label='dispute amount($)'\n                            variant='outlined'\n                            type=\"text\"\n                            helperText=\"Amount should be less than 50$\"\n                            sx={{\n                                borderRadius: '10px !important',\n                                flexBasis: '40%',\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                    {/* <FormControl fullWidth\n                        sx={{\n                            flexBasis: '40%',\n                        }}>\n                        <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            label=\"Age\"\n                        >\n                            <MenuItem value={10}>Ten</MenuItem>\n                            <MenuItem value={20}>Twenty</MenuItem>\n                            <MenuItem value={30}>Thirty</MenuItem>\n                        </Select>\n                    </FormControl> */}\n\n                    {/* new select 1 */}\n                    <Box id=\"select-entity-form\"\n                            className=''\n                            sx={{\n                                flexBasis: '45%',\n                                minWidth: '110px',\n                                '& .css-1sumxir-MuiFormLabel-root-MuiInputLabel-root.Mui-focused':\n                                {\n                                    top: '1px',\n                                    height: 'min-content',\n                                    backgroundColor: '#fff !important',\n                                },\n                                '& [role=\"button\"]': {\n                                    color: '#222',\n                                    textTransform: 'capitalize',\n                                    fontWeight: 400,\n                                },\n                                '& label': {\n                                    top: '12px',\n                                    // top: LegalEntity.length > 1 ? '1px' : '-11px',\n                                    height: 'min-content',\n                                    backgroundColor: '#fff !important',\n                                },\n                            }}>\n                            <FormControl fullWidth>\n                                <InputLabel id=\"demo-simple-select-label\">Issue Type</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    // value={communication}\n                                    value='issuetype2'\n                                    label=\"Issue Type\"\n                                    // onChange={handleChange}\n                                >\n                                    <MenuItem value='issuetype1'>Issue Type1</MenuItem>\n                                    <MenuItem value='issuetype2'>Issue Type2</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n\n\n                    {/* new select 2 */}\n\n\n                    {/* <FormControl fullWidth\n                        sx={{\n                            flexBasis: '40%',\n                        }}>\n                        <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            label=\"Age\"\n                        >\n                            <MenuItem value={10}>Ten</MenuItem>\n                            <MenuItem value={20}>Twenty</MenuItem>\n                            <MenuItem value={30}>Thirty</MenuItem>\n                        </Select>\n                    </FormControl> */}\n\n\n                    <Box id=\"select-entity-form\"\n                            className=''\n                            sx={{\n                                flexBasis: '45%',\n                                minWidth: '110px',\n                                '& .css-1sumxir-MuiFormLabel-root-MuiInputLabel-root.Mui-focused':\n                                {\n                                    top: '1px',\n                                    height: 'min-content',\n                                    backgroundColor: '#fff !important',\n                                },\n                                '& [role=\"button\"]': {\n                                    color: '#222',\n                                    textTransform: 'capitalize',\n                                    fontWeight: 400,\n                                },\n                                '& label': {\n                                    top: '12px',\n                                    // top: LegalEntity.length > 1 ? '1px' : '-11px',\n                                    height: 'min-content',\n                                    backgroundColor: '#fff !important',\n                                },\n                            }}>\n                            <FormControl fullWidth>\n                                <InputLabel id=\"demo-simple-select-label\">Sub Type</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    value='subtype1'\n                                    label=\"Sub Type\"\n                                    // onChange={handleChange}\n                                >\n                                    <MenuItem value='subtype1'>Sub Type1</MenuItem>\n                                    <MenuItem value='subtype2'>Sub Type2</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    <TextareaAutosize\n                        className='raise-ticket-textarea'\n                        aria-label=\"minimum height\"\n                        minRows={3}\n                        maxRows={3}\n                        placeholder=\"Describe Your Complaint\"\n                        style={{ marginBottom: '32px' }}\n                    />\n                    <Box className='raise-ticket-file-upload' sx={{\n                        flexBasis: '100%',\n                        marginBottom: '50px',\n                    }}>\n                        <Stack direction='row' spacing={2}>\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\">\n                                <input hidden accept=\"image/*\" type=\"file\" />\n                                <AttachFileIcon />\n                            </IconButton>\n                            <Box sx={{\n                                borderRadius: '22px',\n                                width: 'auto',\n                                padding: '9px 20px',\n                                border: '1px solid #70707080',\n                                color: '#131523',\n                                fontSize: '12px',\n                                lineHeight: '13px',\n                                fontWeight: 600,\n                                fontFamily: 'ubuntu',\n                                display: 'flex',\n                                gap: '8px',\n                                alignItems: 'center',\n                            }} component='span' className='attachment'><img src={Download} alt='pdf icon' />Document 1.PDF</Box>\n                        </Stack>\n                    </Box>\n                </Box>\n\n\n\n                <Box>\n                    <Stack direction='row' justifyContent='space-between' alignItems='center'>\n                        <Typography variant='h5' component='h1' sx={{\n                            maxWidth: 'unset',\n                            textAlign: 'left',\n                            mb: '40px',\n                            padding: 0,\n                            fontSize: '24px',\n                            lineHeight: '22px',\n                            color: '#303030',\n                            fontWeight: 700,\n                            fontFamily: 'ubuntu',\n                        }} className='raise-ticket--typography'>Contact Person</Typography>\n                        <Button variant='outlined' color='error' startIcon={<AddIcon />} sx={{\n                            borderRadius: '20px',\n                        }}>Add</Button>\n                    </Stack>\n                </Box>\n\n                {/* Second form starts here */}\n                <Box\n                    component=\"form\"\n                    className='raise-ticket-input'\n                    sx={{\n                        '& > :not(style)': { m: 1, width: '25ch' },\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        mb: '68px',\n                        '& label': {\n                            top: '12px',\n                        },\n                        '& label:not(.MuiFormLabel-filled, .MuiInputLabel-shrink)': {\n                            top: '-3px',\n                        },\n                        '& legend': {\n                            display: 'none',\n                        }\n                    }} noValidate autoComplete=\"off\"\n                >\n                    <TextField\n                            className=''\n                            label='contact person'\n                            variant='outlined'\n                            type=\"text\"\n                            sx={{\n                                borderRadius: '10px !important',\n                                flexBasis: '40%',\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                    <TextField\n                            className=''\n                            label='mobile number'\n                            variant='outlined'\n                            type=\"text\"\n                            sx={{\n                                borderRadius: '10px !important',\n                                flexBasis: '40%',\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                    <TextField\n                            className=''\n                            label='email'\n                            variant='outlined'\n                            type=\"text\"\n                            sx={{\n                                borderRadius: '10px !important',\n                                flexBasis: '40%',\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                    <TextField\n                            className=''\n                            label='contact number'\n                            variant='outlined'\n                            type=\"text\"\n                            sx={{\n                                borderRadius: '10px !important',\n                                flexBasis: '40%',\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                    <TextField\n                            className=''\n                            label='mobile number'\n                            variant='outlined'\n                            type=\"text\"\n                            sx={{\n                                borderRadius: '10px !important',\n                                flexBasis: '40%',\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                    <TextField\n                            className=''\n                            label='email'\n                            variant='outlined'\n                            type=\"text\"\n                            sx={{\n                                borderRadius: '10px !important',\n                                flexBasis: '40%',\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                </Box>\n\n                <Box>\n                    <Stack direction='row' spacing={2}>\n                        <Button variant='contained' color='error' onClick={handleSubmitTicket} sx={{\n                            textTransform: 'uppercase',\n                            borderRadius: '23px',\n                            paddingX: '48px',\n                            pt: '10px',\n                            pb: '8px',\n                            fontFamily: 'ubuntu',\n                        }}>submit</Button>\n                        <Button variant='outlined' color='error' sx={{\n                            textTransform: 'uppercase',\n                            borderRadius: '23px',\n                            paddingX: '48px',\n                            pt: '10px',\n                            pb: '8px',\n                            color: '#092133',\n                            fontFamily: 'ubuntu',\n                        }} onClick={handleShow}>cancel</Button>\n                    </Stack>\n                </Box>\n            </Stack>\n        </Box >\n            {showError ? <ModalTicketError /> : \"\"}\n            </>\n    )\n}\n\nexport default RaiseTicket\n","import { useState, useEffect} from 'react';\nimport useLocales from '../../../hooks/useLocales';\nimport { useDispatch } from '../../../redux/store'\n\nconst Card = ({ data, id }: any) => {\n  const { t } = useLocales()\n    const dispatch = useDispatch();\n    const [active, setActive] = useState(data.titel)\n\n    const handleClick = (event : any) => {\n        dispatch(data.action)\n      };\n    const element = document.getElementsByClassName('cardType__1')\n    // console.log(element[1].className)\n\n    useEffect(() => {\n        const element = document.getElementsByClassName('cardType__1')\n        if(element[0]){\n            element[0].className = \"cardType__1 initial\"\n        }\n        if(element[0]){\n            if(element[0].className === \"cardType__1 active\"){\n                element[1].className = \"cardType__1\"\n                element[2].className = \"cardType__1\"\n                element[3].className = \"cardType__1\"\n            }\n        }\n        if(element[1]){\n            if(element[1].className === \"cardType__1 active\"){\n                element[0].className = \"cardType__1\"\n                element[2].className = \"cardType__1\"\n                element[3].className = \"cardType__1\"\n            }\n        }\n        if(element[2]){\n            if(element[2].className === \"cardType__1 active\"){\n                element[1].className = \"cardType__1\"\n                element[0].className = \"cardType__1\"\n                element[3].className = \"cardType__1\"\n            }\n        }\n            if(element[3]){\n            if(element[3].className === \"cardType__1 active\"){\n                element[1].className = \"cardType__1\"\n                element[2].className = \"cardType__1\"\n                element[0].className = \"cardType__1\"\n            }\n        }\n    }, [element[0]])\n    \n    // const element = document.getElementsByClassName('cardType__1')\n    if(element[0]){\n    if(element[0].className === \"cardType__1 active\"){\n        element[1].className = \"cardType__1\"\n        element[2].className = \"cardType__1\"\n        element[3].className = \"cardType__1\"\n    }\n}\nif(element[1]){\n    if(element[1].className === \"cardType__1 active\"){\n        element[0].className = \"cardType__1\"\n        element[2].className = \"cardType__1\"\n        element[3].className = \"cardType__1\"\n    }\n}\nif(element[2]){\n    if(element[2].className === \"cardType__1 active\"){\n        element[1].className = \"cardType__1\"\n        element[0].className = \"cardType__1\"\n        element[3].className = \"cardType__1\"\n    }\n}\n    if(element[3]){\n    if(element[3].className === \"cardType__1 active\"){\n        element[1].className = \"cardType__1\"\n        element[2].className = \"cardType__1\"\n        element[0].className = \"cardType__1\"\n    }\n}\n    \n    //   console.log(fourthElement?.style.backgroundColor);\n      \n    return <button\n        onClick={handleClick}\n        defaultValue={10} \n        className={`cardType__1`}\n        style={{\n            cursor: 'pointer',\n            backgroundColor: ((data.titel == t<string>('allInvoice'))? 'rgb(26, 115, 232)': ((data.titel == t<string>('overdue'))? 'rgb(54, 63, 94)': ((data.titel == t<string>('unpaidInvoices'))? 'rgb(229, 68, 87)': ((data.titel == t<string>('paidInvoices'))? 'rgb(61, 184, 135)': ''))))\n        }}\n    >\n        <div id='cardType__inner' className=\"cardType__inner\">\n            <div className=\"cardType__icon\">\n                {data.icon}\n            </div>\n            <div className=\"cardType__text\">\n                <p id='name' className=\"cardType__name\">\n                    {data.titel}\n                </p>\n                <h3 className=\"cardType__Number\" data-testid='total-data-card'>\n                    {data.value}\n                </h3>\n            </div>\n        </div>\n    </button>\n}\n\nexport default Card","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { Dialog, IconButton, Link } from '@mui/material';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport { styled } from '@mui/system';\nimport EnhancedEncryptionIcon from '@mui/icons-material/EnhancedEncryption';\nimport PasswordProtected from '../../assets/images/svg/password-protected.svg'\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\n\nfunction ModalTicketError() {\n    const [open, setOpen] = React.useState(true);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n                className='modal-ticket-error'\n            >\n                <IconButton onClick={handleClose}><CloseRoundedIcon /></IconButton>\n                <img src={PasswordProtected} alt=\"\" />\n                <DialogTitle id=\"responsive-dialog-title\" textAlign='center'>\n                    {\"Oops\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText textAlign='center'>\n                        Unable to raise a ticket. Please try again\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>\n                        retry\n                    </Button>\n                </DialogActions>\n                <p className='lighter-text'>Need more help? <Link style={{ cursor: 'pointer' }} color='error' underline='always'>Contact Us</Link></p>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default ModalTicketError;\n","import { useTranslation } from 'react-i18next'\nimport { localStorageVar } from '../utils/constants'\nimport { getFromLocalStorage } from './useLocalStorage'\n\ntype LangType = [\n  {\n    value: any\n    label: any\n  },\n  {\n    value: any\n    label: any\n  }\n]\n\nconst LANGS: LangType = [\n  {\n    value: 'en',\n    label: 'English',\n  },\n  {\n    value: 'de',\n    label: 'German',\n  },\n]\n\nexport default function useLocales() {\n  const { i18n, t } = useTranslation()\n  const langStorage = getFromLocalStorage(localStorageVar.I18_LANG_VAR)\n  const currentLang = LANGS.find((_lang) => _lang.value === langStorage)\n\n  const handleChangeLanguage = (newlang: any) => {\n    i18n.changeLanguage(newlang)\n  }\n\n  return {\n    onChangeLang: handleChangeLanguage,\n    t,\n    currentLang,\n    allLang: LANGS,\n  }\n}\n"],"names":["BreadCrums","data","t","useLocales","className","spacing","separator","fontSize","path","map","ele","type","underline","color","id","href","linkURL","transName","PageSearch","searchFn","searchPlaceholder","dispatch","useAppDispatch","useState","searchValue","setSearchValue","handleSearch","e","preventDefault","chnageEvent","undefined","component","sx","display","alignItems","width","ml","flex","onFocus","target","placeholder","onBlur","inputProps","value","onChange","onKeyPress","key","onClick","p","handleShow","showIt","showError","setShowError","Box","bgcolor","boxShadow","height","position","top","right","bottom","padding","zIndex","overflowY","transition","transform","Close","cursor","Stack","Typography","variant","maxWidth","textAlign","mb","lineHeight","fontWeight","fontFamily","textTransform","m","flexWrap","noValidate","autoComplete","TextField","label","borderRadius","flexBasis","helperText","minWidth","backgroundColor","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","TextareaAutosize","minRows","maxRows","style","marginBottom","direction","IconButton","hidden","accept","AttachFile","border","gap","src","alt","justifyContent","Button","startIcon","Add","error","paddingX","pt","pb","ModalTicketError","useDispatch","titel","element","document","getElementsByClassName","useEffect","event","action","defaultValue","icon","React","open","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","onClose","PasswordProtected","LANGS","useTranslation","i18n","langStorage","getFromLocalStorage","localStorageVar","onChangeLang","newlang","changeLanguage","currentLang","find","_lang","allLang"],"sourceRoot":""}