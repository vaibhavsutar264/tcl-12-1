{"version":3,"file":"360.bundle.js","mappings":"uPAqBA,EAjBgB,SAAH,GAAiC,QAA3BA,MACf,MAAc,gBADM,IAAG,UAAO,IAGtB,gBAAKC,UAAU,OAAM,UACjB,gBAAKC,GAAG,oBAAoBC,IAAKC,EAAUC,IAAI,iBAKnD,gBAAKJ,UAAU,OAAM,UACjB,gBAAKE,IAAKG,EAAMD,IAAI,eAKpC,C,+QCYA,EA7BgB,WACd,OACE,gBACAH,GAAG,UACH,YAAU,UAC0BK,MAAM,6BACNC,KAAMC,EAAAA,GAAAA,UACNC,MAAM,OACNC,OAAO,SACPC,QAAQ,kBAAiB,UAEzB,cACIV,GAAG,mBACH,YAAU,kBACVW,UAAU,qDACVC,QAAQ,MAAK,UAEb,iBACIZ,GAAG,aACH,YAAU,aACVa,EAAE,0RACFF,UAAU,eACVG,KAAK,eAKrD,E,qHCJO,IAAMC,EAAU,SAAH,GACL,EAAXC,YACa,EAAbC,cACa,EAAbC,cACgB,I,IACiC,G,EAArBC,EAAAA,UAAe,G,EAAM,E,k5BAA1CC,EAAM,KAAEC,EAAS,KAClBC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAU,OAAKA,EAAMC,MAAQ,EAAE,IAArDH,KACAI,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MAGXC,EAAiB,SAACC,GACpB,OAAOC,OAAOC,SAASC,SAASC,SAASJ,GAAQ,iBAAmB,EACxE,EA6BA,OA5BY,MAART,GACAM,EAAS,KAGbX,EAAAA,WAAgB,WACZE,GAAU,SAACiB,GAAQ,OAAOA,CAAG,IAC7BhB,GAASiB,EAAAA,EAAAA,OACT,IAAMC,EAAQC,SAASC,iBAA8B,eAC/CC,EAAcF,SAASG,cACzB,iBAGJ,GAA0B,QADbH,SAASG,cAAc,eAC3BC,MAAMC,QAAmB,CAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAC9BP,EAAMO,GAAGF,MAAMC,QAAU,OAE7BH,EAAYE,MAAMrC,MAAQ,aAC9B,KAAO,CACHyC,QAAQC,IAAIP,EAAYE,MAAMrC,OAC9B,IAAK,IAAIuC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAC9BP,EAAMO,GAAGF,MAAMC,QAAU,QAE7BH,EAAYE,MAAMrC,MAAQ,OAC9B,CACAc,GAAS6B,EAAAA,EAAAA,MACb,GAAG,KAIC,+BACI,iBACIpD,UAAU,qBACVC,GAAG,eACH6C,MAAO,CAEHO,OAAQ,EACR3C,OAAQ,qBACR4C,SAAU,QACVC,IAAK,OACLC,KAAM,MACNC,OAAQ,MACRhD,MAAO,SACT,WAEF,gBAAKT,UAAU,iBAAgB,UAC3B,gBAAIA,UAAU,gBAAe,WACzB,eAAIA,UAAU,aAAY,UACtB,UAAC,KAAI,CACDA,UAAS,qBAAgBiC,EAAeyB,EAAAA,GAAAA,YACxCC,GAAID,EAAAA,GAAAA,UAAoB,WAExB,iBAAM1D,UAAU,aAAY,UACxB,SAAC4D,EAAA,EAAiB,OAEtB,iBAAM5D,UAAU,aAAaC,GAAG,aAAY,SACvC4B,EAAU,qBAIvB,eAAI7B,UAAU,aAAY,UACtB,UAAC,KAAI,CAACA,UAAS,qBAAgBiC,EAAeyB,EAAAA,GAAAA,kBAC1CC,GAAID,EAAAA,GAAAA,gBAA0B,WAC9B,iBAAM1D,UAAU,aAAY,UACxB,SAAC6D,EAAA,EAAyB,OAE9B,iBAAM7D,UAAU,aAAaC,GAAG,aAAY,SACvC4B,EAAU,0BAIvB,eAAI7B,UAAU,aAAY,UACtB,UAAC,KAAI,CAACA,UAAU,aAAa2D,GAAG,GAAE,WAC9B,iBAAM3D,UAAU,aAAY,UACxB,SAAC8D,EAAA,EAA6B,OAElC,iBAAM9D,UAAU,aAAaC,GAAG,aAAY,SACvC4B,EAAU,oBAIvB,eAAI7B,UAAU,aAAY,UACtB,UAAC,KAAI,CAACA,UAAU,aAAa2D,GAAG,GAAE,WAC9B,iBAAM3D,UAAU,aAAY,UACxB,SAAC+D,EAAA,EAAqB,OAE1B,iBAAM/D,UAAU,aAAaC,GAAG,aAAY,SACvC4B,EAAU,eAIvB,eAAI7B,UAAU,aAAY,UACtB,UAAC,KAAI,CACDA,UAAS,qBAAgBiC,EAAeyB,EAAAA,GAAAA,UACxCC,GAAID,EAAAA,GAAAA,QAAkB,WAEtB,iBAAM1D,UAAU,aAAY,UACxB,SAACgE,EAAA,EAAmB,OAExB,iBAAMhE,UAAU,aAAaC,GAAG,aAAY,SACvC4B,EAAU,0BAIvB,eAAI7B,UAAU,aAAY,UACtB,UAAC,KAAI,CAACA,UAAU,aAAa2D,GAAG,GAAE,WAC9B,iBAAM3D,UAAU,aAAY,UAExB,SAAC,EAAM,OAEX,iBAAMA,UAAU,aAAaC,GAAG,aAAY,SACvC4B,EAAU,mBAIvB,eAAI7B,UAAU,aAAY,UACtB,UAAC,KAAI,CAACA,UAAU,aAAa2D,GAAG,GAAE,WAC9B,iBAAM3D,UAAU,aAAY,UACxB,SAACiE,EAAA,EAAY,OAEjB,iBAAMjE,UAAU,aAAaC,GAAG,aAAY,SACvC4B,EAAU,wBAM/B,mBACItB,KAAK,SACLP,UAAU,gBACVC,GAAG,iBACHiE,QAAS,WACL5C,GAAU,SAACiB,GAAQ,OAAOA,CAAG,IAC7BhB,GAASiB,EAAAA,EAAAA,OACT,IAAMC,EAAQC,SAASC,iBAA8B,eAC/CC,EAAcF,SAASG,cACzB,iBAGJ,GAA0B,QADbH,SAASG,cAAc,eAC3BC,MAAMC,QAAmB,CAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAC9BP,EAAMO,GAAGF,MAAMC,QAAU,OAE7BH,EAAYE,MAAMrC,MAAQ,aAC9B,KAAO,CACHyC,QAAQC,IAAIP,EAAYE,MAAMrC,OAC9B,IAAK,IAAIuC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAC9BP,EAAMO,GAAGF,MAAMC,QAAU,QAE7BH,EAAYE,MAAMrC,MAAQ,OAC9B,CACJ,EAAE,SAEDY,GAAS,SAAC8C,EAAA,EAA4B,KAAM,SAACC,EAAA,EAA2B,UAM7F,E,8MC3KA,EAzBgB,WACd,OACF,gBACAnE,GAAG,UACH,YAAU,UACVK,MAAM,6BACNC,KAAMC,EAAAA,GAAAA,UACNC,MAAM,SACNC,OAAO,OACPC,QAAQ,kBAAiB,UAEzB,iBACIV,GAAG,aACH,YAAU,aACVa,EAAE,kwEACFF,UAAU,4BACVG,KAAK,UACLsD,OAAO,UACPC,YAAY,MACZzD,QAAQ,SAIZ,E,gKCcO,IAAM0D,EAAY,SAAH,GAEX,I,IADPtD,EAAW,EAAXA,YAGMM,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAU,OAAKA,EAAMC,MAAQ,EAAE,IAArDH,KACA+C,GAASC,EAAAA,EAAAA,KAATD,KACA3C,GAAMC,EAAAA,EAAAA,KAAND,EACgE,G,EAAxCT,EAAAA,SAAmC,M,EAAK,E,k5BAAjEsD,EAAQ,KAAEC,EAAW,KACtB5C,GAAWC,EAAAA,EAAAA,MACX4C,EAAOC,QAAQH,GAIfI,EAAc,WAChBH,EAAY,KAChB,EAIMI,GAAUC,EAAAA,EAAAA,IAAoBC,EAAAA,GAAAA,WAKpC,OAJY,MAARxD,GACAM,EAAS,MAIT,+BACI,gBACI/B,UAAU,oBACVC,GAAG,cACH6C,MAAO,CAAEQ,SAAU,QAASC,IAAK,EAAGF,OAAQ,GAAI,UAEhD,iBAAKrD,UAAU,uBAAsB,WACjC,gBAAKA,UAAU,OAAM,UACjB,SAAC,IAAO,CAACD,MAAOgF,OAEpB,iBAAK/E,UAAU,kBAAiB,WAC5B,gBAAKA,UAAU,oCAAmC,UAC9C,UAACkF,EAAA,EAAK,CACFC,UAAU,OACVnF,UAAU,eACVoF,GAAI,CACArC,QAAS,OACTsC,WAAY,SACZ5E,MAAO,KACT,WAEF,SAAC6E,EAAA,GAAS,CACNC,QAAS,SAACC,GACNA,EAAEC,OAAOC,YAAc,EAC3B,EACAC,OAAQ,SAACH,GACLA,EAAEC,OAAOC,YAAc,GAAH,OAAM7D,EAAU,oBACxC,EACAuD,GAAI,CAAEQ,GAAI,EAAGC,KAAM,GACnBH,YAAa7D,EAAU,oBACvBiE,WAAY,CACR,aAAc,0CAGtB,SAACC,EAAA,EAAU,CACP9F,GAAG,qBACHM,KAAK,SACL6E,GAAI,CAAEY,EAAG,QACT,aAAW,SAAQ,UAEnB,SAACC,EAAA,EAAU,YAIvB,gBAAKjG,UAAU,oCAAmC,UAC9C,iBAAKA,UAAU,kBAAiB,WAC5B,mBAAQA,UAAU,mBAAmBkE,QAASjD,EAAY,UACtD,SAACiF,EAAA,EAAa,OAElB,mBAAQlG,UAAU,WAAWkE,QAASjD,EAAY,UAC9C,SAACkF,EAAA,EAAY,YAIzB,gBAAKnG,UAAU,yCAAwC,UACnD,UAACoG,EAAA,EAAW,CACRhB,GAAI,CACAiB,EAAG,EACHC,SAAU,IACVhD,SAAU,YAEdiD,KAAK,QACLtG,GAAG,2BAA0B,WAE7B,gBACIC,IAAgB,SAAX6E,EAAqByB,EAAQC,EAClCrG,IAAI,GACJ0C,MAAO,CACHrC,MAAO,OACPC,OAAQ,OACR4C,SAAU,WACVC,IAAK,MACLC,KAAM,QACN5C,UAAW,uBAGnB,SAAC8F,EAAA,EAAM,CACHC,UAAW,CACPC,mBAAmB,GAEvBC,QAAQ,oBACR5G,GAAG,wBACH6G,MAAyB,SAAlBtC,EAAKuC,UAAsD,SAAlBvC,EAAKuC,UAAsD,SAAlBvC,EAAKuC,SAA1D,UAA8FvC,EAAKuC,SACvIC,MAAM,WACNC,SAAU,SAACzB,GACPhB,EAAK0C,eAAe1B,EAAEC,OAAOqB,QAC7BK,EAAAA,EAAAA,IAAkB,MAAO3B,EAAEC,OAAOqB,MACtC,EAAE,SAEDM,EAAAA,EAAAA,KAAuB,SAACL,GAAQ,OAC7B,SAACM,EAAA,EAAQ,CAAgBP,MAAOC,EAAS,SACxB,SAAZA,EAAsB,UAAYA,GADxBA,EAEJ,YAK3B,gBAAK/G,UAAU,mCAAkC,UAC7C,SAACsH,EAAA,EAAK,CACFC,aAAc,EACdtH,GAAG,qBACHmF,GAAI,CACAoC,MAAO,QACT,UAEF,SAACC,EAAA,EAAqB,CAACD,MAAM,SAASE,SAAS,iBAGvD,iBAAK1H,UAAU,uCAAsC,WACjD,UAAC2H,EAAA,EAAM,CACH1H,GAAG,eACH,gBAAe2E,EAAO,kBAAegD,EACrC,gBAAc,OACd,gBAAehD,EAAO,YAASgD,EAC/B1D,QAjIR,SAAC2D,GACjBlD,EAAYkD,EAAMC,cACtB,EAgI4B1C,GAAI,CACA2C,YAAa,EACb,oBAAqB,CACjBL,SAAU,KAEhB,WAEF,SAACM,EAAA,EAAM,CACH5H,IAAI,aACJF,IAAI,GACJkF,GAAI,CAAE3E,MAAO,GAAIC,OAAQ,OAE7B,iBAAMV,UAAU,WAAU,SAAEyB,aAAI,EAAJA,EAAMwG,aAClC,SAACC,EAAA,EAAiB,CAAClI,UAAU,kBAEjC,UAACmI,EAAA,EAAI,CACDnI,UAAU,4BACVC,GAAG,aACHyE,SAAUA,EACVE,KAAMA,EACNwD,QAAStD,EACTuD,cAAe,CACX,kBAAmB,gBACrB,WAEF,SAAChB,EAAA,EAAQ,CAACnD,QAASY,EAAY,UAC3B,iBAAK9E,UAAU,uBAAsB,WACjC,gBAAKA,UAAU,mBAAkB,UAC7B,SAACgI,EAAA,EAAM,CAAC5H,IAAI,aAAaF,IAAI,QAEjC,iBAAKF,UAAU,mBAAkB,WAC7B,cAAGA,UAAU,OAAM,SAAEyB,aAAI,EAAJA,EAAMwG,aAC3B,cAAGjI,UAAU,MAAK,SAAEyB,aAAI,EAAJA,EAAMwG,aAC1B,eAAGjI,UAAU,SAAQ,UAChB6B,EAAU,gBAAe,gBAAe,IACxCA,EAAU,MAAK,QAAOA,EAAU,oBAKjD,SAACwF,EAAA,EAAQ,CAACnD,QAASY,EAAahC,MAAO,CAAEwF,WAAY,OAAQ,UACzD,UAAC,KAAI,CACD3E,GAAG,kBACH3D,UAAU,sCAAqC,WAE/C,iBAAMA,UAAU,OAAM,UAClB,SAAC,EAAO,OAEZ,iBAAMA,UAAU,OAAM,SAAE6B,EAAU,mBAG1C,SAACwF,EAAA,EAAQ,CAACnD,QAASY,EAAY,UAC3B,UAAC,KAAI,CAACnB,GAAG,mBAAmB3D,UAAU,sCAAqC,WACvE,iBAAMA,UAAU,OAAM,UAClB,SAACuI,EAAA,EAAgB,OAErB,iBAAMvI,UAAU,OAAM,SAAE6B,EAAU,0BAG1C,UAACwF,EAAA,EAAQ,CAACrH,UAAU,YAAYkE,QAvLvC,WACjB3C,GAASiH,EAAAA,EAAAA,MACb,EAqLmF1F,MAAO,CAAEwF,WAAY,QAAS,WACjF,iBAAMtI,UAAU,OAAM,UAClB,SAACyI,EAAA,EAAkB,OAEvB,iBAAMzI,UAAU,mBAAkB,SAC7B6B,EAAU,8BAUnD,EC3Pa6G,EAAgB,SAAH,GAAyE,IAAnEzH,EAAW,EAAXA,YAAa0H,EAAS,EAATA,UACzC,OACI,iBAAK3I,UAAU,qBAAoB,WAC/B,SAACuE,EAAS,CAACtD,YAAaA,KACxB,SAACD,EAAO,CAACC,YAAaA,KACtB,SAAC0H,EAAS,MAGtB,EAEA,G,2FCEMC,EAAkB,CACtB,CACE9B,MAAO,KACPE,MAAO,WAET,CACEF,MAAO,KACPE,MAAO,WAII,SAASlF,IACtB,OAAoB2C,EAAAA,EAAAA,KAAZD,EAAI,EAAJA,KAAM3C,EAAC,EAADA,EACRgH,GAAc7D,EAAAA,EAAAA,IAAoBC,EAAAA,GAAAA,cAOxC,MAAO,CACL6D,aAL2B,SAACC,GAC5BvE,EAAK0C,eAAe6B,EACtB,EAIElH,EAAAA,EACAmH,YATkBJ,EAAMK,MAAK,SAACC,GAAK,OAAKA,EAAMpC,QAAU+B,CAAW,IAUnEM,QAASP,EAEb,C","sources":["webpack://tclcpasstwentyfirstoct/./src/components/common/elements/Logo.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/tickets.tsx","webpack://tclcpasstwentyfirstoct/./src/components/privateLayout/SideBar.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/setting.tsx","webpack://tclcpasstwentyfirstoct/./src/components/privateLayout/HeaderBar.tsx","webpack://tclcpasstwentyfirstoct/./src/components/privateLayout/PrivateLayout.tsx","webpack://tclcpasstwentyfirstoct/./src/hooks/useLocales.tsx"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport Logo from '../../../assets/images/CPaaSLogo.png'\r\nimport DarkLogo from '../../../assets/images/CPaaSLogo-dark.png'\r\n\r\nconst TclLogo = ({ theme = 'light' }: any) => {\r\n    if (theme === 'light') {\r\n        return (\r\n            <div className=\"logo\">\r\n                <img id=\"tata-logo-invoice\" src={DarkLogo} alt=\"CPAAS TCL\" />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"logo\">\r\n                <img src={Logo} alt=\"CPAAS TCL\" />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TclLogo\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst Tickets = () => {\r\n  return (\r\n    <svg\r\n    id=\"tickets\"\r\n    data-name=\"tickets\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        type={typeVar.IMAGE_SVG}\r\n                                        width=\"20.2\"\r\n                                        height=\"22.167\"\r\n                                        viewBox=\"0 0 20.2 22.167\"\r\n                                    >\r\n                                        <g\r\n                                            id=\"_01_align_center\"\r\n                                            data-name=\"01 align center\"\r\n                                            transform=\"matrix(0.891, 0.454, -0.454, 0.891, 5.499, -1.362)\"\r\n                                            opacity=\"0.7\"\r\n                                        >\r\n                                            <path\r\n                                                id=\"Path_13687\"\r\n                                                data-name=\"Path 13687\"\r\n                                                d=\"M14.25,0h-3V.75a1.5,1.5,0,1,1-3,0V0h-3A2.25,2.25,0,0,0,3,2.25V18H8.25v-.75a1.5,1.5,0,0,1,3,0V18H16.5V2.25A2.25,2.25,0,0,0,14.25,0ZM12.655,16.5a3,3,0,0,0-5.811,0H4.5V12.75H6.75v-1.5H4.5v-9a.75.75,0,0,1,.75-.75H6.845a3,3,0,0,0,5.811,0H14.25a.75.75,0,0,1,.75.75v9H12.75v1.5H15V16.5Z\"\r\n                                                transform=\"translate(0)\"\r\n                                                fill=\"#092133\"\r\n                                            />\r\n                                        </g>\r\n                                    </svg>\r\n  )\r\n}\r\n\r\nexport default Tickets\r\n","import * as React from 'react'\r\nimport {\r\n    appRoutes,\r\n} from '../../utils/constants'\r\nimport KeyboardDoubleArrowLeftIcon from '@mui/icons-material/KeyboardDoubleArrowLeft'\r\nimport KeyboardDoubleArrowRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport useLocales from '../../hooks/useLocales'\r\nimport { useDispatch, useSelector } from '../../redux/store'\r\nimport SpeedOutlinedIcon from '@mui/icons-material/SpeedOutlined'\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined'\r\nimport HomeRepairServiceOutlinedIcon from '@mui/icons-material/HomeRepairServiceOutlined'\r\nimport ChatBubbleTwoToneIcon from '@mui/icons-material/ChatBubbleTwoTone'\r\nimport ReceiptOutlinedIcon from '@mui/icons-material/ReceiptOutlined'\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport Ticket from '../common/icons/tickets'\r\nimport { reset, updateWidth } from '../../redux/slices/commonSlice'\r\n\r\ntype SidebarProps = {\r\n    toggleTheme: any\r\n    handleADWidth?: any\r\n    handleBDWidth?: any\r\n}\r\n\r\n\r\nexport const SideBar = ({\r\n    toggleTheme,\r\n    handleADWidth,\r\n    handleBDWidth,\r\n}: SidebarProps) => {\r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n    const dispatch = useDispatch()\r\n    const { user } = useSelector((state: any) => state.auth || [])\r\n    const { t } = useLocales()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const getActiveClass = (path: any) => {\r\n        return window.location.pathname.includes(path) ? 'sidebar-active' : ''\r\n    }\r\n    if (user == null) {\r\n        navigate('/')\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setIsOpen((pre: any) => (!pre))\r\n        dispatch(updateWidth())\r\n        const texts = document.querySelectorAll<HTMLElement>('#link__text')\r\n        const sidebarLeft = document.querySelector(\r\n            '#sidebar-left'\r\n        ) as HTMLElement\r\n        const text = document.querySelector('#link__text') as HTMLElement\r\n        if (text.style.display != 'none') {\r\n            for (let i = 0; i < texts.length; i++) {\r\n                texts[i].style.display = 'none'\r\n            }\r\n            sidebarLeft.style.width = 'max-content'\r\n        } else {\r\n            console.log(sidebarLeft.style.width)\r\n            for (let i = 0; i < texts.length; i++) {\r\n                texts[i].style.display = 'block'\r\n            }\r\n            sidebarLeft.style.width = '300px'\r\n        }\r\n        dispatch(reset())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"dashboard__sidebar\"\r\n                id=\"sidebar-left\"\r\n                style={{\r\n                    // transition: 'all 350ms 0ms ease-in',\r\n                    zIndex: 1,\r\n                    height: 'calc(100vh - 90px)',\r\n                    position: 'fixed',\r\n                    top: '90px',\r\n                    left: '0px',\r\n                    bottom: '0px',\r\n                    width: '300px'\r\n                }}\r\n            >\r\n                <div className=\"sidebar__inner\">\r\n                    <ul className=\"sidebar__list\">\r\n                        <li className=\"list__item\">\r\n                            <Link\r\n                                className={`item__link ${getActiveClass(appRoutes.DASHBOARD)}`}\r\n                                to={appRoutes.DASHBOARD}\r\n                            >\r\n                                <span className=\"link__icon\">\r\n                                    <SpeedOutlinedIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('dashboard')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className={`item__link ${getActiveClass(appRoutes.USER_MANAGEMENT)}`}\r\n                                to={appRoutes.USER_MANAGEMENT}>\r\n                                <span className=\"link__icon\">\r\n                                    <PersonOutlineOutlinedIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('userManagement')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    <HomeRepairServiceOutlinedIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('services')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    <ChatBubbleTwoToneIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('sms')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link\r\n                                className={`item__link ${getActiveClass(appRoutes.BILLING)}`}\r\n                                to={appRoutes.BILLING}\r\n                            >\r\n                                <span className=\"link__icon\">\r\n                                    <ReceiptOutlinedIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('billingInvoice')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    {/* <ConfirmationNumberOutlinedIcon /> */}\r\n                                    <Ticket />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('tickets')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    <SettingsIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('support')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"sidebarToggle\"\r\n                    id='sidebar-button'\r\n                    onClick={() => {\r\n                        setIsOpen((pre: any) => (!pre))\r\n                        dispatch(updateWidth())\r\n                        const texts = document.querySelectorAll<HTMLElement>('#link__text')\r\n                        const sidebarLeft = document.querySelector(\r\n                            '#sidebar-left'\r\n                        ) as HTMLElement\r\n                        const text = document.querySelector('#link__text') as HTMLElement\r\n                        if (text.style.display != 'none') {\r\n                            for (let i = 0; i < texts.length; i++) {\r\n                                texts[i].style.display = 'none'\r\n                            }\r\n                            sidebarLeft.style.width = 'max-content'\r\n                        } else {\r\n                            console.log(sidebarLeft.style.width)\r\n                            for (let i = 0; i < texts.length; i++) {\r\n                                texts[i].style.display = 'block'\r\n                            }\r\n                            sidebarLeft.style.width = '300px'\r\n                        }\r\n                    }}\r\n                >\r\n                    {isOpen ? <KeyboardDoubleArrowRightIcon /> : <KeyboardDoubleArrowLeftIcon />}\r\n                </button>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst Setting = () => {\r\n  return (\r\n<svg\r\nid=\"setting\"\r\ndata-name=\"setting\"\r\nxmlns=\"http://www.w3.org/2000/svg\"\r\ntype={typeVar.IMAGE_SVG}\r\nwidth=\"20.594\"\r\nheight=\"20.6\"\r\nviewBox=\"0 0 20.594 20.6\"\r\n>\r\n<path\r\n    id=\"Path_13737\"\r\n    data-name=\"Path 13737\"\r\n    d=\"M87.077,26.563H86.043a1.462,1.462,0,0,1-1.418-1.126l-.214-.874a8.212,8.212,0,0,1-2.56-1.181l-.816.4a1.459,1.459,0,0,1-1.77-.368l-.659-.771a1.459,1.459,0,0,1-.061-1.808l.522-.714a8.339,8.339,0,0,1-.5-1.4l-.89-.234a1.462,1.462,0,0,1-1.11-1.418V16.032a1.463,1.463,0,0,1,1.126-1.418l.874-.2a8.318,8.318,0,0,1,.576-1.542l-.512-.739a1.463,1.463,0,0,1,.106-1.808l.685-.774a1.465,1.465,0,0,1,1.782-.32l.8.419h0A8.15,8.15,0,0,1,84.4,8.563l.214-.877a1.462,1.462,0,0,1,1.424-1.123h1.034A1.463,1.463,0,0,1,88.5,7.683l.214.88a8.124,8.124,0,0,1,2.56,1.181l.8-.413a1.462,1.462,0,0,1,1.776.362l.669.79a1.466,1.466,0,0,1,.07,1.811l-.528.73h0a8.207,8.207,0,0,1,.506,1.386l.877.214a1.462,1.462,0,0,1,1.117,1.424v1.034a1.462,1.462,0,0,1-1.12,1.424l-.874.214a8.537,8.537,0,0,1-.579,1.533L94.5,21a1.459,1.459,0,0,1-.115,1.808l-.682.771a1.469,1.469,0,0,1-1.786.32l-.778-.416a8.152,8.152,0,0,1-2.422,1.078l-.23.89a1.463,1.463,0,0,1-1.408,1.11Zm-5.165-4.384a.566.566,0,0,1,.336.112A7.108,7.108,0,0,0,85,23.571a.551.551,0,0,1,.422.416l.285,1.19h0a.346.346,0,0,0,.336.266h1.034a.32.32,0,0,0,.32-.262l.3-1.206h0a.569.569,0,0,1,.422-.413,7.118,7.118,0,0,0,2.64-1.19.556.556,0,0,1,.608-.048l1.078.576a.342.342,0,0,0,.422-.074l.688-.771h0a.342.342,0,0,0,.029-.426L92.875,20.6a.567.567,0,0,1-.029-.589,7.11,7.11,0,0,0,.714-1.885.567.567,0,0,1,.416-.422l1.2-.294h0a.346.346,0,0,0,.266-.336V16.048a.345.345,0,0,0-.262-.336l-1.206-.294a.567.567,0,0,1-.416-.422,7.16,7.16,0,0,0-.64-1.77.56.56,0,0,1,.045-.589l.73-1h0a.343.343,0,0,0-.019-.426l-.682-.787a.339.339,0,0,0-.419-.086l-1.11.557a.553.553,0,0,1-.589-.054,7.081,7.081,0,0,0-2.746-1.28.566.566,0,0,1-.422-.416l-.294-1.2a.346.346,0,0,0-.32-.266h-1.05a.346.346,0,0,0-.336.266l-.294,1.219a.566.566,0,0,1-.422.413,7.129,7.129,0,0,0-2.624,1.181.553.553,0,0,1-.6.054l-1.1-.579a.352.352,0,0,0-.422.077l-.685.774a.352.352,0,0,0-.026.429l.707,1.018h0a.56.56,0,0,1,.032.589,7.129,7.129,0,0,0-.723,1.9.56.56,0,0,1-.416.422l-1.19.282a.346.346,0,0,0-.266.336v1.034a.349.349,0,0,0,.262.339l1.206.3h0a.557.557,0,0,1,.41.422,7.177,7.177,0,0,0,.64,1.77.56.56,0,0,1-.032.579l-.717.989a.342.342,0,0,0,.016.426l.662.79a.346.346,0,0,0,.419.09l1.117-.554h0a.57.57,0,0,1,.25-.058Zm4.653-2.1a3.52,3.52,0,1,1,2.489-1.031A3.52,3.52,0,0,1,86.565,20.083Zm0-5.91a2.394,2.394,0,1,0,1.691.7,2.4,2.4,0,0,0-1.691-.7Z\"\r\n    transform=\"translate(-76.265 -6.263)\"\r\n    fill=\"#092133\"\r\n    stroke=\"#092133\"\r\n    strokeWidth=\"0.6\"\r\n    opacity=\"0.7\"\r\n/>\r\n</svg>\r\n  )\r\n}\r\n\r\nexport default Setting\r\n","import * as React from 'react'\r\nimport {\r\n    apiVrbls,\r\n    localStorageVar,\r\n} from '../../utils/constants'\r\nimport Select from '@mui/material/Select'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Badge from '@mui/material/Badge'\r\nimport Button from '@mui/material/Button'\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputBase from '@mui/material/InputBase'\r\nimport LightModeIcon from '@mui/icons-material/LightMode'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone'\r\nimport Paper from '@mui/material/Paper'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport { availableLanguages } from '../../i18n'\r\nimport {\r\n    getFromLocalStorage,\r\n    setInLocalStorage,\r\n} from '../../hooks/useLocalStorage'\r\nimport useLocales from '../../hooks/useLocales'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { logout } from '../../redux/slices/authSlice'\r\nimport { useDispatch, useSelector } from '../../redux/store'\r\nimport Setting from '../common/icons/setting'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined'\r\nimport Globe from '../../assets/images/svg/globe.svg'\r\nimport GlobeDark from '../../assets/images/svg/globe-dark.svg'\r\nimport TclLogo from '../common/elements/Logo'\r\nimport LanguageSelector from '../header-sub-components/LanguageSelector'\r\n\r\n\r\nexport const HeaderBar = ({\r\n    toggleTheme,\r\n}: any) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { user } = useSelector((state: any) => state.auth || [])\r\n    const { i18n } = useTranslation()\r\n    const { t } = useLocales()\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n    const navigate = useNavigate()\r\n    const open = Boolean(anchorEl)\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const handelLogout = () => {\r\n        dispatch(logout())\r\n    }\r\n    const getitem = getFromLocalStorage(localStorageVar.THEME_VAR)\r\n    if (user == null) {\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"dashboard__navbar\"\r\n                id=\"sidebar-top\"\r\n                style={{ position: 'fixed', top: 0, zIndex: 2 }}\r\n            >\r\n                <div className=\"dashboard__container\">\r\n                    <div className=\"logo\" >\r\n                        <TclLogo theme={getitem} />\r\n                    </div>\r\n                    <div className=\"right__elements\">\r\n                        <div className=\"right__elementsItem search__group\">\r\n                            <Paper\r\n                                component=\"form\"\r\n                                className=\"search__form\"\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    width: 478,\r\n                                }}\r\n                            >\r\n                                <InputBase\r\n                                    onFocus={(e) => {\r\n                                        e.target.placeholder = ''\r\n                                    }}\r\n                                    onBlur={(e) => {\r\n                                        e.target.placeholder = `${t<string>('searchWithinSite')}`\r\n                                    }}\r\n                                    sx={{ ml: 1, flex: 1 }}\r\n                                    placeholder={t<string>('searchWithinSite')}\r\n                                    inputProps={{\r\n                                        'aria-label': 'Search Products, Orders and Clients',\r\n                                    }}\r\n                                />\r\n                                <IconButton\r\n                                    id=\"searchicon-sidebar\"\r\n                                    type=\"button\"\r\n                                    sx={{ p: '10px' }}\r\n                                    aria-label=\"search\"\r\n                                >\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                            </Paper>\r\n                        </div>\r\n                        <div className=\"right__elementsItem theme__toggle\">\r\n                            <div className=\"toggle__wrapper\">\r\n                                <button className=\"lightMode active\" onClick={toggleTheme}>\r\n                                    <LightModeIcon />\r\n                                </button>\r\n                                <button className=\"darkMode\" onClick={toggleTheme}>\r\n                                    <DarkModeIcon />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right__elementsItem language__selector\">\r\n                            <FormControl\r\n                                sx={{\r\n                                    m: 1,\r\n                                    minWidth: 100,\r\n                                    position: 'relative',\r\n                                }}\r\n                                size=\"small\"\r\n                                id=\"lang-background-invoices\"\r\n                            >\r\n                                <img\r\n                                    src={getitem == 'light' ? Globe : GlobeDark}\r\n                                    alt=\"\"\r\n                                    style={{\r\n                                        width: '18px',\r\n                                        height: '18px',\r\n                                        position: 'absolute',\r\n                                        top: '50%',\r\n                                        left: '-12px',\r\n                                        transform: 'translateY(-50%)',\r\n                                    }}\r\n                                />\r\n                                <Select\r\n                                    MenuProps={{\r\n                                        disableScrollLock: true,\r\n                                    }}\r\n                                    labelId=\"demo-select-small\"\r\n                                    id=\"demo-select-small-out\"\r\n                                    value={i18n.language == ('en-ZA') ? 'English' : i18n.language == ('en-US') ? 'English' : i18n.language == ('en-GB') ? 'English' : i18n.language}\r\n                                    label=\"Language\"\r\n                                    onChange={(e) => {\r\n                                        i18n.changeLanguage(e.target.value)\r\n                                        setInLocalStorage('lng', e.target.value)\r\n                                    }}\r\n                                >\r\n                                    {availableLanguages.map((language) => (\r\n                                        <MenuItem key={language} value={language}>\r\n                                            {language == 'en-ZA' ? 'English' : language}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"right__elementsItem notification\">\r\n                            <Badge\r\n                                badgeContent={4}\r\n                                id=\"notification-badge\"\r\n                                sx={{\r\n                                    color: '#fff',\r\n                                }}\r\n                            >\r\n                                <NotificationsNoneIcon color=\"action\" fontSize='inherit' />\r\n                            </Badge>\r\n                        </div>\r\n                        <div className=\"right__elementsItem profile__setting\">\r\n                            <Button\r\n                                id=\"basic-button\"\r\n                                aria-controls={open ? 'basic-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded={open ? 'true' : undefined}\r\n                                onClick={handleClick}\r\n                                sx={{\r\n                                    marginRight: 0,\r\n                                    '& .MuiAvatar-root': {\r\n                                        fontSize: 12,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <Avatar\r\n                                    alt=\"Remy Sharp\"\r\n                                    src=\"\"\r\n                                    sx={{ width: 25, height: 25 }}\r\n                                />\r\n                                <span className=\"userName\">{user?.firstname}</span>\r\n                                <ArrowDropDownIcon className=\"dropArrow\" />\r\n                            </Button>\r\n                            <Menu\r\n                                className=\"profile__menu right__menu\"\r\n                                id=\"basic-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                MenuListProps={{\r\n                                    'aria-labelledby': 'basic-button',\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <div className=\"dropProfile__wrapper\">\r\n                                        <div className=\"profile__picture\">\r\n                                            <Avatar alt=\"Remy Sharp\" src=\"\" />\r\n                                        </div>\r\n                                        <div className=\"profile__content\">\r\n                                            <p className=\"name\">{user?.firstname}</p>\r\n                                            <p className=\"deg\">{user?.firstname}</p>\r\n                                            <p className=\"status\">\r\n                                                {t<string>('lastActivity')}: 2 Aug, 2022{' '}\r\n                                                {t<string>('at')} 5:30{t<string>('amPm')}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose} style={{ paddingTop: '8px' }}>\r\n                                    <Link\r\n                                        to=\"/accountdetails\"\r\n                                        className=\"profile__dropLink userinfo-dropdown\"\r\n                                    >\r\n                                        <span className=\"icon\">\r\n                                            <Setting />\r\n                                        </span>\r\n                                        <span className=\"text\">{t<string>('setting')}</span>\r\n                                    </Link>\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <Link to=\"/change-password\" className=\"profile__dropLink userinfo-dropdown\">\r\n                                        <span className=\"icon\">\r\n                                            <LockOutlinedIcon />\r\n                                        </span>\r\n                                        <span className=\"text\">{t<string>('changePassword')}</span>\r\n                                    </Link>\r\n                                </MenuItem>\r\n                                <MenuItem className=\"logout-li\" onClick={handelLogout} style={{ paddingTop: '12px' }}>\r\n                                    <span className=\"icon\">\r\n                                        <LogoutOutlinedIcon />\r\n                                    </span>\r\n                                    <span className=\"text logout-text\">\r\n                                        {t<string>('logout')}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { SideBar } from './SideBar'\r\nimport { HeaderBar } from './HeaderBar'\r\n\r\nexport const PrivateLayout = ({ toggleTheme, Component }: { toggleTheme: any, Component: any }) => {\r\n    return (\r\n        <div className=\"dashboard__wrapper\">\r\n            <HeaderBar toggleTheme={toggleTheme} />\r\n            <SideBar toggleTheme={toggleTheme} />\r\n            <Component />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrivateLayout\r\n","import { useTranslation } from 'react-i18next'\r\nimport { localStorageVar } from '../utils/constants'\r\nimport { getFromLocalStorage } from './useLocalStorage'\r\n\r\ntype LangType = [\r\n  {\r\n    value: any\r\n    label: any\r\n  },\r\n  {\r\n    value: any\r\n    label: any\r\n  }\r\n]\r\n\r\nconst LANGS: LangType = [\r\n  {\r\n    value: 'en',\r\n    label: 'English',\r\n  },\r\n  {\r\n    value: 'de',\r\n    label: 'German',\r\n  },\r\n]\r\n\r\nexport default function useLocales() {\r\n  const { i18n, t } = useTranslation()\r\n  const langStorage = getFromLocalStorage(localStorageVar.I18_LANG_VAR)\r\n  const currentLang = LANGS.find((_lang) => _lang.value === langStorage)\r\n\r\n  const handleChangeLanguage = (newlang: any) => {\r\n    i18n.changeLanguage(newlang)\r\n  }\r\n\r\n  return {\r\n    onChangeLang: handleChangeLanguage,\r\n    t,\r\n    currentLang,\r\n    allLang: LANGS,\r\n  }\r\n}\r\n"],"names":["theme","className","id","src","DarkLogo","alt","Logo","xmlns","type","typeVar","width","height","viewBox","transform","opacity","d","fill","SideBar","toggleTheme","handleADWidth","handleBDWidth","React","isOpen","setIsOpen","dispatch","useDispatch","user","useSelector","state","auth","t","useLocales","navigate","useNavigate","getActiveClass","path","window","location","pathname","includes","pre","updateWidth","texts","document","querySelectorAll","sidebarLeft","querySelector","style","display","i","length","console","log","reset","zIndex","position","top","left","bottom","appRoutes","to","SpeedOutlined","PersonOutlineOutlined","HomeRepairServiceOutlined","ChatBubbleTwoTone","ReceiptOutlined","Settings","onClick","KeyboardDoubleArrowRight","KeyboardDoubleArrowLeft","stroke","strokeWidth","HeaderBar","i18n","useTranslation","anchorEl","setAnchorEl","open","Boolean","handleClose","getitem","getFromLocalStorage","localStorageVar","Paper","component","sx","alignItems","InputBase","onFocus","e","target","placeholder","onBlur","ml","flex","inputProps","IconButton","p","Search","LightMode","DarkMode","FormControl","m","minWidth","size","Globe","GlobeDark","Select","MenuProps","disableScrollLock","labelId","value","language","label","onChange","changeLanguage","setInLocalStorage","availableLanguages","MenuItem","Badge","badgeContent","color","NotificationsNone","fontSize","Button","undefined","event","currentTarget","marginRight","Avatar","firstname","ArrowDropDown","Menu","onClose","MenuListProps","paddingTop","LockOutlined","logout","LogoutOutlined","PrivateLayout","Component","LANGS","langStorage","onChangeLang","newlang","currentLang","find","_lang","allLang"],"sourceRoot":""}