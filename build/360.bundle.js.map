{"version":3,"file":"360.bundle.js","mappings":"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","sources":["webpack://tclcpasstwentyfirstoct/./src/components/common/elements/Logo.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/tickets.tsx","webpack://tclcpasstwentyfirstoct/./src/components/privateLayout/SideBar.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/setting.tsx","webpack://tclcpasstwentyfirstoct/./src/components/privateLayout/HeaderBar.tsx","webpack://tclcpasstwentyfirstoct/./src/components/privateLayout/PrivateLayout.tsx","webpack://tclcpasstwentyfirstoct/./src/hooks/useLocales.tsx"],"sourcesContent":["import { Link } from 'react-router-dom'\nimport Logo from '../../../assets/images/CPaaSLogo.png'\nimport DarkLogo from '../../../assets/images/CPaaSLogo-dark.png'\n\nconst TclLogo = ({ theme = 'light' }: any) => {\n    if (theme === 'light') {\n        return (\n            <div className=\"logo\">\n                <img id=\"tata-logo-invoice\" src={DarkLogo} alt=\"CPAAS TCL\" />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"logo\">\n                <img src={Logo} alt=\"CPAAS TCL\" />\n            </div>\n\n        )\n    }\n}\n\nexport default TclLogo\n","import { typeVar } from '../../../utils/constants'\n\nconst Tickets = () => {\n  return (\n    <svg\n    id=\"tickets\"\n    data-name=\"tickets\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        type={typeVar.IMAGE_SVG}\n                                        width=\"20.2\"\n                                        height=\"22.167\"\n                                        viewBox=\"0 0 20.2 22.167\"\n                                    >\n                                        <g\n                                            id=\"_01_align_center\"\n                                            data-name=\"01 align center\"\n                                            transform=\"matrix(0.891, 0.454, -0.454, 0.891, 5.499, -1.362)\"\n                                            opacity=\"0.7\"\n                                        >\n                                            <path\n                                                id=\"Path_13687\"\n                                                data-name=\"Path 13687\"\n                                                d=\"M14.25,0h-3V.75a1.5,1.5,0,1,1-3,0V0h-3A2.25,2.25,0,0,0,3,2.25V18H8.25v-.75a1.5,1.5,0,0,1,3,0V18H16.5V2.25A2.25,2.25,0,0,0,14.25,0ZM12.655,16.5a3,3,0,0,0-5.811,0H4.5V12.75H6.75v-1.5H4.5v-9a.75.75,0,0,1,.75-.75H6.845a3,3,0,0,0,5.811,0H14.25a.75.75,0,0,1,.75.75v9H12.75v1.5H15V16.5Z\"\n                                                transform=\"translate(0)\"\n                                                fill=\"#092133\"\n                                            />\n                                        </g>\n                                    </svg>\n  )\n}\n\nexport default Tickets\n","import * as React from 'react'\nimport {\n    appRoutes,\n} from '../../utils/constants'\nimport KeyboardDoubleArrowLeftIcon from '@mui/icons-material/KeyboardDoubleArrowLeft'\nimport KeyboardDoubleArrowRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight'\nimport { Link, useNavigate } from 'react-router-dom'\nimport useLocales from '../../hooks/useLocales'\nimport { useDispatch, useSelector } from '../../redux/store'\nimport SpeedOutlinedIcon from '@mui/icons-material/SpeedOutlined'\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined'\nimport HomeRepairServiceOutlinedIcon from '@mui/icons-material/HomeRepairServiceOutlined'\nimport ChatBubbleTwoToneIcon from '@mui/icons-material/ChatBubbleTwoTone'\nimport ReceiptOutlinedIcon from '@mui/icons-material/ReceiptOutlined'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport Ticket from '../common/icons/tickets'\nimport { reset, updateWidth } from '../../redux/slices/commonSlice'\n\ntype SidebarProps = {\n    toggleTheme: any\n    handleADWidth?: any\n    handleBDWidth?: any\n}\n\n\nexport const SideBar = ({\n    toggleTheme,\n    handleADWidth,\n    handleBDWidth,\n}: SidebarProps) => {\n    const [isOpen, setIsOpen] = React.useState(false)\n    const dispatch = useDispatch()\n    const { user } = useSelector((state: any) => state.auth || [])\n    const { t } = useLocales()\n    const navigate = useNavigate()\n\n\n    const getActiveClass = (path: any) => {\n        return window.location.pathname.includes(path) ? 'sidebar-active' : ''\n    }\n    if (user == null) {\n        navigate('/')\n    }\n\n    React.useEffect(() => {\n        setIsOpen((pre: any) => (!pre))\n        dispatch(updateWidth())\n        const texts = document.querySelectorAll<HTMLElement>('#link__text')\n        const sidebarLeft = document.querySelector(\n            '#sidebar-left'\n        ) as HTMLElement\n        const text = document.querySelector('#link__text') as HTMLElement\n        if (text.style.display != 'none') {\n            console.log(sidebarLeft.style.width)\n            for (let i = 0; i < texts.length; i++) {\n                texts[i].style.display = 'none'\n            }\n            sidebarLeft.style.width = 'max-content'\n        } else {\n            console.log(sidebarLeft.style.width)\n            for (let i = 0; i < texts.length; i++) {\n                texts[i].style.display = 'block'\n            }\n            sidebarLeft.style.width = '300px'\n        }\n        dispatch(reset())\n    }, [])\n\n\n    return (\n        <>\n            <div\n                className=\"dashboard__sidebar\"\n                id=\"sidebar-left\"\n                style={{\n                    // transition: 'all 350ms 0ms ease-in',\n                    zIndex: 1,\n                    height: 'calc(100vh - 90px)',\n                    position: 'fixed',\n                    top: '90px',\n                    left: '0px',\n                    bottom: '0px',\n                    width: '300px'\n                }}\n            >\n                <div className=\"sidebar__inner\">\n                    <ul className=\"sidebar__list\">\n                        <li className=\"list__item\">\n                            <Link\n                                className={`item__link ${getActiveClass(appRoutes.DASHBOARD)}`}\n                                to={appRoutes.DASHBOARD}\n                            >\n                                <span className=\"link__icon\">\n                                    <SpeedOutlinedIcon />\n                                </span>\n                                <span className=\"link__text\" id=\"link__text\">\n                                    {t<string>('dashboard')}\n                                </span>\n                            </Link>\n                        </li>\n                        <li className=\"list__item\">\n                            <Link className={`item__link ${getActiveClass(appRoutes.USER_MANAGEMENT)}`}\n                                to={appRoutes.USER_MANAGEMENT}>\n                                <span className=\"link__icon\">\n                                    <PersonOutlineOutlinedIcon />\n                                </span>\n                                <span className=\"link__text\" id=\"link__text\">\n                                    {t<string>('userManagement')}\n                                </span>\n                            </Link>\n                        </li>\n                        <li className=\"list__item\">\n                            <Link className=\"item__link\" to=\"\">\n                                <span className=\"link__icon\">\n                                    <HomeRepairServiceOutlinedIcon />\n                                </span>\n                                <span className=\"link__text\" id=\"link__text\">\n                                    {t<string>('services')}\n                                </span>\n                            </Link>\n                        </li>\n                        <li className=\"list__item\">\n                            <Link className=\"item__link\" to=\"\">\n                                <span className=\"link__icon\">\n                                    <ChatBubbleTwoToneIcon />\n                                </span>\n                                <span className=\"link__text\" id=\"link__text\">\n                                    {t<string>('sms')}\n                                </span>\n                            </Link>\n                        </li>\n                        <li className=\"list__item\">\n                            <Link\n                                className={`item__link ${getActiveClass(appRoutes.BILLING)}`}\n                                to={appRoutes.BILLING}\n                            >\n                                <span className=\"link__icon\">\n                                    <ReceiptOutlinedIcon />\n                                </span>\n                                <span className=\"link__text\" id=\"link__text\">\n                                    {t<string>('billingInvoice')}\n                                </span>\n                            </Link>\n                        </li>\n                        <li className=\"list__item\">\n                            <Link className=\"item__link\" to=\"\">\n                                <span className=\"link__icon\">\n                                    {/* <ConfirmationNumberOutlinedIcon /> */}\n                                    <Ticket />\n                                </span>\n                                <span className=\"link__text\" id=\"link__text\">\n                                    {t<string>('tickets')}\n                                </span>\n                            </Link>\n                        </li>\n                        <li className=\"list__item\">\n                            <Link className=\"item__link\" to=\"\">\n                                <span className=\"link__icon\">\n                                    <SettingsIcon />\n                                </span>\n                                <span className=\"link__text\" id=\"link__text\">\n                                    {t<string>('support')}\n                                </span>\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n                <button\n                    type=\"button\"\n                    className=\"sidebarToggle\"\n                    id='sidebar-button'\n                    onClick={() => {\n                        setIsOpen((pre: any) => (!pre))\n                        dispatch(updateWidth())\n                        const texts = document.querySelectorAll<HTMLElement>('#link__text')\n                        const sidebarLeft = document.querySelector(\n                            '#sidebar-left'\n                        ) as HTMLElement\n                        const text = document.querySelector('#link__text') as HTMLElement\n                        if (text.style.display != 'none') {\n                            console.log(sidebarLeft.style.width)\n                            for (let i = 0; i < texts.length; i++) {\n                                texts[i].style.display = 'none'\n                            }\n                            sidebarLeft.style.width = 'max-content'\n                        } else {\n                            console.log(sidebarLeft.style.width)\n                            for (let i = 0; i < texts.length; i++) {\n                                texts[i].style.display = 'block'\n                            }\n                            sidebarLeft.style.width = '300px'\n                        }\n                    }}\n                >\n                    {isOpen ? <KeyboardDoubleArrowRightIcon /> : <KeyboardDoubleArrowLeftIcon />}\n                </button>\n\n            </div>\n        </>\n    )\n}\n","import { typeVar } from '../../../utils/constants'\n\nconst Setting = () => {\n  return (\n<svg\nid=\"setting\"\ndata-name=\"setting\"\nxmlns=\"http://www.w3.org/2000/svg\"\ntype={typeVar.IMAGE_SVG}\nwidth=\"20.594\"\nheight=\"20.6\"\nviewBox=\"0 0 20.594 20.6\"\n>\n<path\n    id=\"Path_13737\"\n    data-name=\"Path 13737\"\n    d=\"M87.077,26.563H86.043a1.462,1.462,0,0,1-1.418-1.126l-.214-.874a8.212,8.212,0,0,1-2.56-1.181l-.816.4a1.459,1.459,0,0,1-1.77-.368l-.659-.771a1.459,1.459,0,0,1-.061-1.808l.522-.714a8.339,8.339,0,0,1-.5-1.4l-.89-.234a1.462,1.462,0,0,1-1.11-1.418V16.032a1.463,1.463,0,0,1,1.126-1.418l.874-.2a8.318,8.318,0,0,1,.576-1.542l-.512-.739a1.463,1.463,0,0,1,.106-1.808l.685-.774a1.465,1.465,0,0,1,1.782-.32l.8.419h0A8.15,8.15,0,0,1,84.4,8.563l.214-.877a1.462,1.462,0,0,1,1.424-1.123h1.034A1.463,1.463,0,0,1,88.5,7.683l.214.88a8.124,8.124,0,0,1,2.56,1.181l.8-.413a1.462,1.462,0,0,1,1.776.362l.669.79a1.466,1.466,0,0,1,.07,1.811l-.528.73h0a8.207,8.207,0,0,1,.506,1.386l.877.214a1.462,1.462,0,0,1,1.117,1.424v1.034a1.462,1.462,0,0,1-1.12,1.424l-.874.214a8.537,8.537,0,0,1-.579,1.533L94.5,21a1.459,1.459,0,0,1-.115,1.808l-.682.771a1.469,1.469,0,0,1-1.786.32l-.778-.416a8.152,8.152,0,0,1-2.422,1.078l-.23.89a1.463,1.463,0,0,1-1.408,1.11Zm-5.165-4.384a.566.566,0,0,1,.336.112A7.108,7.108,0,0,0,85,23.571a.551.551,0,0,1,.422.416l.285,1.19h0a.346.346,0,0,0,.336.266h1.034a.32.32,0,0,0,.32-.262l.3-1.206h0a.569.569,0,0,1,.422-.413,7.118,7.118,0,0,0,2.64-1.19.556.556,0,0,1,.608-.048l1.078.576a.342.342,0,0,0,.422-.074l.688-.771h0a.342.342,0,0,0,.029-.426L92.875,20.6a.567.567,0,0,1-.029-.589,7.11,7.11,0,0,0,.714-1.885.567.567,0,0,1,.416-.422l1.2-.294h0a.346.346,0,0,0,.266-.336V16.048a.345.345,0,0,0-.262-.336l-1.206-.294a.567.567,0,0,1-.416-.422,7.16,7.16,0,0,0-.64-1.77.56.56,0,0,1,.045-.589l.73-1h0a.343.343,0,0,0-.019-.426l-.682-.787a.339.339,0,0,0-.419-.086l-1.11.557a.553.553,0,0,1-.589-.054,7.081,7.081,0,0,0-2.746-1.28.566.566,0,0,1-.422-.416l-.294-1.2a.346.346,0,0,0-.32-.266h-1.05a.346.346,0,0,0-.336.266l-.294,1.219a.566.566,0,0,1-.422.413,7.129,7.129,0,0,0-2.624,1.181.553.553,0,0,1-.6.054l-1.1-.579a.352.352,0,0,0-.422.077l-.685.774a.352.352,0,0,0-.026.429l.707,1.018h0a.56.56,0,0,1,.032.589,7.129,7.129,0,0,0-.723,1.9.56.56,0,0,1-.416.422l-1.19.282a.346.346,0,0,0-.266.336v1.034a.349.349,0,0,0,.262.339l1.206.3h0a.557.557,0,0,1,.41.422,7.177,7.177,0,0,0,.64,1.77.56.56,0,0,1-.032.579l-.717.989a.342.342,0,0,0,.016.426l.662.79a.346.346,0,0,0,.419.09l1.117-.554h0a.57.57,0,0,1,.25-.058Zm4.653-2.1a3.52,3.52,0,1,1,2.489-1.031A3.52,3.52,0,0,1,86.565,20.083Zm0-5.91a2.394,2.394,0,1,0,1.691.7,2.4,2.4,0,0,0-1.691-.7Z\"\n    transform=\"translate(-76.265 -6.263)\"\n    fill=\"#092133\"\n    stroke=\"#092133\"\n    strokeWidth=\"0.6\"\n    opacity=\"0.7\"\n/>\n</svg>\n  )\n}\n\nexport default Setting\n","import * as React from 'react'\nimport {\n    apiVrbls,\n    localStorageVar,\n} from '../../utils/constants'\nimport Select from '@mui/material/Select'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport Avatar from '@mui/material/Avatar'\nimport Badge from '@mui/material/Badge'\nimport Button from '@mui/material/Button'\nimport DarkModeIcon from '@mui/icons-material/DarkMode'\nimport FormControl from '@mui/material/FormControl'\nimport IconButton from '@mui/material/IconButton'\nimport InputBase from '@mui/material/InputBase'\nimport LightModeIcon from '@mui/icons-material/LightMode'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone'\nimport Paper from '@mui/material/Paper'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { availableLanguages } from '../../i18n'\nimport {\n    getFromLocalStorage,\n    setInLocalStorage,\n} from '../../hooks/useLocalStorage'\nimport useLocales from '../../hooks/useLocales'\nimport { useTranslation } from 'react-i18next'\nimport { logout } from '../../redux/slices/authSlice'\nimport { useDispatch, useSelector } from '../../redux/store'\nimport Setting from '../common/icons/setting'\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined'\nimport Globe from '../../assets/images/svg/globe.svg'\nimport GlobeDark from '../../assets/images/svg/globe-dark.svg'\nimport TclLogo from '../common/elements/Logo'\nimport LanguageSelector from '../header-sub-components/LanguageSelector'\n\n\nexport const HeaderBar = ({\n    toggleTheme,\n}: any) => {\n\n    const dispatch = useDispatch()\n    const { user } = useSelector((state: any) => state.auth || [])\n    const { i18n } = useTranslation()\n    const { t } = useLocales()\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n    const navigate = useNavigate()\n    const open = Boolean(anchorEl)\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget)\n    }\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const handelLogout = () => {\n        dispatch(logout())\n    }\n    const getitem = getFromLocalStorage(localStorageVar.THEME_VAR)\n    if (user == null) {\n        navigate('/')\n    }\n\n    return (\n        <>\n            <div\n                className=\"dashboard__navbar\"\n                id=\"sidebar-top\"\n                style={{ position: 'fixed', top: 0, zIndex: 2 }}\n            >\n                <div className=\"dashboard__container\">\n                    <div className=\"logo\" >\n                        <TclLogo theme={getitem} />\n                    </div>\n                    <div className=\"right__elements\">\n                        <div className=\"right__elementsItem search__group\">\n                            <Paper\n                                component=\"form\"\n                                className=\"search__form\"\n                                sx={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    width: 478,\n                                }}\n                            >\n                                <InputBase\n                                    onFocus={(e) => {\n                                        e.target.placeholder = ''\n                                    }}\n                                    onBlur={(e) => {\n                                        e.target.placeholder = `${t<string>('searchWithinSite')}`\n                                    }}\n                                    sx={{ ml: 1, flex: 1 }}\n                                    placeholder={t<string>('searchWithinSite')}\n                                    inputProps={{\n                                        'aria-label': 'Search Products, Orders and Clients',\n                                    }}\n                                />\n                                <IconButton\n                                    id=\"searchicon-sidebar\"\n                                    type=\"button\"\n                                    sx={{ p: '10px' }}\n                                    aria-label=\"search\"\n                                >\n                                    <SearchIcon />\n                                </IconButton>\n                            </Paper>\n                        </div>\n                        <div className=\"right__elementsItem theme__toggle\">\n                            <div className=\"toggle__wrapper\">\n                                <button className=\"lightMode active\" onClick={toggleTheme}>\n                                    <LightModeIcon />\n                                </button>\n                                <button className=\"darkMode\" onClick={toggleTheme}>\n                                    <DarkModeIcon />\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"right__elementsItem language__selector\">\n                            <FormControl\n                                sx={{\n                                    m: 1,\n                                    minWidth: 100,\n                                    position: 'relative',\n                                }}\n                                size=\"small\"\n                                id=\"lang-background-invoices\"\n                            >\n                                <img\n                                    src={getitem == 'light' ? Globe : GlobeDark}\n                                    alt=\"\"\n                                    style={{\n                                        width: '18px',\n                                        height: '18px',\n                                        position: 'absolute',\n                                        top: '50%',\n                                        left: '-12px',\n                                        transform: 'translateY(-50%)',\n                                    }}\n                                />\n                                <Select\n                                    MenuProps={{\n                                        disableScrollLock: true,\n                                    }}\n                                    labelId=\"demo-select-small\"\n                                    id=\"demo-select-small-out\"\n                                    value={i18n.language == ('en-ZA') ? 'English' : i18n.language == ('en-US') ? 'English' : i18n.language == ('en-GB') ? 'English' : i18n.language}\n                                    label=\"Language\"\n                                    onChange={(e) => {\n                                        i18n.changeLanguage(e.target.value)\n                                        setInLocalStorage('lng', e.target.value)\n                                    }}\n                                >\n                                    {availableLanguages.map((language) => (\n                                        <MenuItem key={language} value={language}>\n                                            {language == 'en-ZA' ? 'English' : language}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div className=\"right__elementsItem notification\">\n                            <Badge\n                                badgeContent={4}\n                                id=\"notification-badge\"\n                                sx={{\n                                    color: '#fff',\n                                }}\n                            >\n                                <NotificationsNoneIcon color=\"action\" fontSize='inherit' />\n                            </Badge>\n                        </div>\n                        <div className=\"right__elementsItem profile__setting\">\n                            <Button\n                                id=\"basic-button\"\n                                aria-controls={open ? 'basic-menu' : undefined}\n                                aria-haspopup=\"true\"\n                                aria-expanded={open ? 'true' : undefined}\n                                onClick={handleClick}\n                                sx={{\n                                    marginRight: 0,\n                                    '& .MuiAvatar-root': {\n                                        fontSize: 12,\n                                    },\n                                }}\n                            >\n                                <Avatar\n                                    alt=\"Remy Sharp\"\n                                    src=\"\"\n                                    sx={{ width: 25, height: 25 }}\n                                />\n                                <span className=\"userName\">{user?.firstname}</span>\n                                <ArrowDropDownIcon className=\"dropArrow\" />\n                            </Button>\n                            <Menu\n                                className=\"profile__menu right__menu\"\n                                id=\"basic-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={handleClose}\n                                MenuListProps={{\n                                    'aria-labelledby': 'basic-button',\n                                }}\n                            >\n                                <MenuItem onClick={handleClose}>\n                                    <div className=\"dropProfile__wrapper\">\n                                        <div className=\"profile__picture\">\n                                            <Avatar alt=\"Remy Sharp\" src=\"\" />\n                                        </div>\n                                        <div className=\"profile__content\">\n                                            <p className=\"name\">{user?.firstname}</p>\n                                            <p className=\"deg\">{user?.firstname}</p>\n                                            <p className=\"status\">\n                                                {t<string>('lastActivity')}: 2 Aug, 2022{' '}\n                                                {t<string>('at')} 5:30{t<string>('amPm')}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </MenuItem>\n                                <MenuItem onClick={handleClose} style={{ paddingTop: '8px' }}>\n                                    <Link\n                                        to=\"/accountdetails\"\n                                        className=\"profile__dropLink userinfo-dropdown\"\n                                    >\n                                        <span className=\"icon\">\n                                            <Setting />\n                                        </span>\n                                        <span className=\"text\">{t<string>('setting')}</span>\n                                    </Link>\n                                </MenuItem>\n                                <MenuItem onClick={handleClose}>\n                                    <Link to=\"/change-password\" className=\"profile__dropLink userinfo-dropdown\">\n                                        <span className=\"icon\">\n                                            <LockOutlinedIcon />\n                                        </span>\n                                        <span className=\"text\">{t<string>('changePassword')}</span>\n                                    </Link>\n                                </MenuItem>\n                                <MenuItem className=\"logout-li\" onClick={handelLogout} style={{ paddingTop: '12px' }}>\n                                    <span className=\"icon\">\n                                        <LogoutOutlinedIcon />\n                                    </span>\n                                    <span className=\"text logout-text\">\n                                        {t<string>('logout')}\n                                    </span>\n                                </MenuItem>\n                            </Menu>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import { SideBar } from './SideBar'\nimport { HeaderBar } from './HeaderBar'\n\nexport const PrivateLayout = ({ toggleTheme, Component }: { toggleTheme: any, Component: any }) => {\n    return (\n        <div className=\"dashboard__wrapper\">\n            <HeaderBar toggleTheme={toggleTheme} />\n            <SideBar toggleTheme={toggleTheme} />\n            <Component />\n        </div>\n    )\n}\n\nexport default PrivateLayout\n","import { useTranslation } from 'react-i18next'\nimport { localStorageVar } from '../utils/constants'\nimport { getFromLocalStorage } from './useLocalStorage'\n\ntype LangType = [\n  {\n    value: any\n    label: any\n  },\n  {\n    value: any\n    label: any\n  }\n]\n\nconst LANGS: LangType = [\n  {\n    value: 'en',\n    label: 'English',\n  },\n  {\n    value: 'de',\n    label: 'German',\n  },\n]\n\nexport default function useLocales() {\n  const { i18n, t } = useTranslation()\n  const langStorage = getFromLocalStorage(localStorageVar.I18_LANG_VAR)\n  const currentLang = LANGS.find((_lang) => _lang.value === langStorage)\n\n  const handleChangeLanguage = (newlang: any) => {\n    i18n.changeLanguage(newlang)\n  }\n\n  return {\n    onChangeLang: handleChangeLanguage,\n    t,\n    currentLang,\n    allLang: LANGS,\n  }\n}\n"],"names":["theme","className","id","src","DarkLogo","alt","Logo","xmlns","type","typeVar","width","height","viewBox","transform","opacity","d","fill","SideBar","toggleTheme","handleADWidth","handleBDWidth","React","isOpen","setIsOpen","dispatch","useDispatch","user","useSelector","state","auth","t","useLocales","navigate","useNavigate","getActiveClass","path","window","location","pathname","includes","pre","updateWidth","texts","document","querySelectorAll","sidebarLeft","querySelector","style","display","console","log","i","length","reset","zIndex","position","top","left","bottom","appRoutes","to","SpeedOutlined","PersonOutlineOutlined","HomeRepairServiceOutlined","ChatBubbleTwoTone","ReceiptOutlined","Settings","onClick","KeyboardDoubleArrowRight","KeyboardDoubleArrowLeft","stroke","strokeWidth","HeaderBar","i18n","useTranslation","anchorEl","setAnchorEl","open","Boolean","handleClose","getitem","getFromLocalStorage","localStorageVar","Paper","component","sx","alignItems","InputBase","onFocus","e","target","placeholder","onBlur","ml","flex","inputProps","IconButton","p","Search","LightMode","DarkMode","FormControl","m","minWidth","size","Globe","GlobeDark","Select","MenuProps","disableScrollLock","labelId","value","language","label","onChange","changeLanguage","setInLocalStorage","availableLanguages","MenuItem","Badge","badgeContent","color","NotificationsNone","fontSize","Button","undefined","event","currentTarget","marginRight","Avatar","firstname","ArrowDropDown","Menu","onClose","MenuListProps","paddingTop","LockOutlined","logout","LogoutOutlined","PrivateLayout","Component","LANGS","langStorage","onChangeLang","newlang","currentLang","find","_lang","allLang"],"sourceRoot":""}