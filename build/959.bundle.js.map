{"version":3,"file":"959.bundle.js","mappings":"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","sources":["webpack://tclcpasstwentyfirstoct/./src/components/common/icons/pdf.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/ticket.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/export.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/DateSelect.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/Actions.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/overdue.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/paidInvoice.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/unpaidInvoice.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/download.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/loader-and-snackbar/Downlaoding.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/loader-and-snackbar/Downlaoded.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/DownloadCdr.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/tables/DataTables.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/invoice.tsx","webpack://tclcpasstwentyfirstoct/./src/components/billing/Billing.tsx"],"sourcesContent":["import { typeVar } from '../../../utils/constants'\r\n\r\nconst Pdf = () => {\r\n  return (\r\n    <svg\r\n      id=\"Group_169122\"\r\n      data-name=\"Group 169122\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      type={typeVar.IMAGE_SVG}\r\n      width=\"21\"\r\n      height=\"21.803\"\r\n      viewBox=\"0 0 21 21.803\"\r\n    >\r\n      <defs>\r\n        <clipPath id=\"clipPath\">\r\n          <rect\r\n            id=\"Rectangle_149222\"\r\n            data-name=\"Rectangle 149222\"\r\n            width=\"21\"\r\n            height=\"21.803\"\r\n            fill=\"#344857\"\r\n          />\r\n        </clipPath>\r\n      </defs>\r\n      <g id=\"Group_169121\" data-name=\"Group 169121\" clipPath=\"url(#clipPath)\">\r\n        <path\r\n          id=\"Path_13839\"\r\n          data-name=\"Path 13839\"\r\n          d=\"M16.959,21.8H4.039a.456.456,0,0,0-.077-.033A1.907,1.907,0,0,1,2.382,19.8c0-.539,0-1.078,0-1.617,0-.161.069-.368-.031-.471s-.308-.03-.469-.034A1.906,1.906,0,0,1,.006,15.8C0,13.214,0,10.632,0,8.05A1.782,1.782,0,0,1,.362,6.978a1.942,1.942,0,0,1,1.732-.805c.287.009.288,0,.288-.271,0-1.319,0-2.639,0-3.958A1.9,1.9,0,0,1,3.2.344,2.487,2.487,0,0,1,4.039,0h9.1a.513.513,0,0,0,.1.035,3.178,3.178,0,0,1,1.9,1Q16.438,2.417,17.746,3.8a3.212,3.212,0,0,1,.863,1.923c.015.146-.061.35.045.423s.3.026.454.029a1.9,1.9,0,0,1,1.884,1.889q.014,3.864,0,7.728a1.831,1.831,0,0,1-.979,1.636,2.079,2.079,0,0,1-1.21.241c-.15-.009-.19.038-.188.187.008.688.01,1.377,0,2.065a1.9,1.9,0,0,1-1.27,1.768c-.125.045-.256.076-.384.113M10.5,16.395h8.433c.555,0,.787-.232.787-.786q0-3.682,0-7.364c0-.56-.229-.792-.781-.792H2.053c-.541,0-.776.235-.776.775q0,3.693,0,7.385c0,.552.232.782.791.782H10.5M10.5,6.175q3.325,0,6.65,0c.157,0,.206-.035.2-.2a2,2,0,0,0-.561-1.341Q15.5,3.281,14.213,1.919A1.99,1.99,0,0,0,12.7,1.276q-4.154.005-8.308,0a.653.653,0,0,0-.732.735c0,1.313,0,2.626-.006,3.938,0,.2.057.228.236.228q3.3-.009,6.608,0m0,11.5c-2.209,0-4.418,0-6.627,0-.178,0-.223.046-.22.222.011.638,0,1.277,0,1.915a.65.65,0,0,0,.725.72H16.616a.651.651,0,0,0,.725-.72c0-.638-.006-1.277,0-1.915,0-.177-.043-.222-.22-.221-2.209.007-4.418,0-6.627,0\"\r\n          transform=\"translate(0)\"\r\n          fill=\"#344857\"\r\n        />\r\n        <path\r\n          id=\"Path_13840\"\r\n          data-name=\"Path 13840\"\r\n          d=\"M149.731,159.686q0-1.106,0-2.212c0-.525.239-.761.769-.761.4,0,.807-.006,1.21,0a2.245,2.245,0,0,1,2.159,1.35,3.51,3.51,0,0,1-.285,3.687,2.165,2.165,0,0,1-1.757.93c-.459.017-.92.022-1.379.02a.649.649,0,0,1-.71-.717c0-.766,0-1.531,0-2.3Zm1.276.005h0c0,.362,0,.723,0,1.085,0,.2-.086.471.033.6s.4.032.611.037a1.1,1.1,0,0,0,1.1-.717,2.489,2.489,0,0,0,.062-1.866,1.123,1.123,0,0,0-1.186-.836,3.978,3.978,0,0,1-.4,0c-.171-.018-.231.03-.226.215.014.5,0,.992,0,1.489\"\r\n          transform=\"translate(-141.229 -147.812)\"\r\n          fill=\"#344857\"\r\n        />\r\n        <path\r\n          id=\"Path_13841\"\r\n          data-name=\"Path 13841\"\r\n          d=\"M55.361,156.739a4.478,4.478,0,0,1,1.113.078,2,2,0,0,1-.445,3.93c-.219.009-.439.012-.658.007-.121,0-.158.042-.157.161.006.418,0,.837,0,1.255a.639.639,0,0,1-.636.7.651.651,0,0,1-.638-.7q-.006-2.362-.006-4.724a.643.643,0,0,1,.7-.7c.226,0,.453,0,.727,0m-.15,2h0c0,.2,0,.4,0,.6,0,.111.037.151.147.147.2-.007.4,0,.594-.008a.74.74,0,0,0,.724-.718.748.748,0,0,0-.732-.735c-.2-.007-.4,0-.594,0-.117-.005-.144.042-.14.149.007.191,0,.383,0,.574\"\r\n          transform=\"translate(-50.874 -147.839)\"\r\n          fill=\"#344857\"\r\n        />\r\n        <path\r\n          id=\"Path_13842\"\r\n          data-name=\"Path 13842\"\r\n          d=\"M257.519,158.965q0-1.16,0-2.319a.643.643,0,0,1,.7-.716q.913,0,1.826,0a.643.643,0,0,1,.694.641.652.652,0,0,1-.686.634c-.361,0-.722.006-1.083,0-.129,0-.192.02-.184.171.013.255.011.511,0,.766-.005.135.059.147.166.146.326,0,.651-.007.977,0a.64.64,0,0,1,.422,1.128.64.64,0,0,1-.432.147c-.319,0-.637.006-.956,0-.139,0-.18.04-.178.18.008.525,0,1.05,0,1.574a.641.641,0,1,1-1.274-.01q0-1.17,0-2.34\"\r\n          transform=\"translate(-242.897 -147.076)\"\r\n          fill=\"#344857\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Pdf\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst Ticket = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      type={typeVar.IMAGE_SVG}\r\n      width=\"20.2\"\r\n      height=\"22.167\"\r\n      viewBox=\"0 0 20.2 22.167\"\r\n    >\r\n      <g\r\n        id=\"_01_align_center\"\r\n        data-name=\"01 align center\"\r\n        transform=\"matrix(0.891, 0.454, -0.454, 0.891, 5.499, -1.362)\"\r\n      >\r\n        <path\r\n          id=\"Path_13687\"\r\n          data-name=\"Path 13687\"\r\n          d=\"M14.25,0h-3V.75a1.5,1.5,0,1,1-3,0V0h-3A2.25,2.25,0,0,0,3,2.25V18H8.25v-.75a1.5,1.5,0,0,1,3,0V18H16.5V2.25A2.25,2.25,0,0,0,14.25,0ZM12.655,16.5a3,3,0,0,0-5.811,0H4.5V12.75H6.75v-1.5H4.5v-9a.75.75,0,0,1,.75-.75H6.845a3,3,0,0,0,5.811,0H14.25a.75.75,0,0,1,.75.75v9H12.75v1.5H15V16.5Z\"\r\n          transform=\"translate(0)\"\r\n          fill=\"#344857\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Ticket\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst Export = () => {\r\n  return (\r\n    <svg\r\n    id=\"export\"\r\n    data-name=\"export\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            type={typeVar.IMAGE_SVG}\r\n                            width=\"15.556\"\r\n                            height=\"15.5\"\r\n                            viewBox=\"0 0 15.556 15.5\"\r\n                        >\r\n                            <g\r\n                                id=\"Group_168472\"\r\n                                data-name=\"Group 168472\"\r\n                                transform=\"translate(-1184.1 -638.75)\"\r\n                            >\r\n                                <path\r\n                                    id=\"Path_13745\"\r\n                                    data-name=\"Path 13745\"\r\n                                    d=\"M250.443,57.1v-.131l-.037-.075-.037-.056-.094-.112h-.019l-.112-.094-.056-.037-.075-.037h-4.625a.749.749,0,0,0,0,1.5H247.9l-8.446,8.389a.755.755,0,0,0,1.067,1.067l8.446-8.446v2.509a.749.749,0,0,0,1.5,0V57.27a.747.747,0,0,0-.019-.169Z\"\r\n                                    transform=\"translate(948.945 582.441)\"\r\n                                    fill=\"#d63548\"\r\n                                    stroke=\"#d63548\"\r\n                                    strokeWidth=\"0.5\"\r\n                                />\r\n                                <path\r\n                                    id=\"Path_13746\"\r\n                                    data-name=\"Path 13746\"\r\n                                    d=\"M127.129,154.372h7.64a2.247,2.247,0,0,0,2.247-2.247v-3.577a.749.749,0,0,0-1.5,0v3.577a.749.749,0,0,1-.749.749h-7.64a.749.749,0,0,1-.749-.749v-7.64a.749.749,0,0,1,.749-.749h3.577a.749.749,0,0,0,0-1.5h-3.577a2.247,2.247,0,0,0-2.247,2.247v7.64a2.247,2.247,0,0,0,2.247,2.247Z\"\r\n                                    transform=\"translate(1059.469 499.628)\"\r\n                                    fill=\"#d63548\"\r\n                                    stroke=\"#d63548\"\r\n                                    strokeWidth=\"0.5\"\r\n                                />\r\n                            </g>\r\n                        </svg>\r\n  )\r\n}\r\n\r\nexport default Export\r\n","import React from \"react\";\r\nimport {\r\n  DateRangePicker,\r\n  LocalizationProvider,\r\n} from \"@material-ui/pickers\"\r\nimport DateFnsUtils from \"@material-ui/pickers/adapter/date-fns\"\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport { useDispatch } from \"../../../redux/store\";\r\nimport { updateCal } from \"../../../redux/slices/billingSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nexport const DateSelect = ({ dateRange, setDateRange }: any) => {\r\n  const getDate = (dateRange: any) => {\r\n    const s = `${new Date(dateRange[0]).toDateString()}`.split(\" \");\r\n    const e = `${new Date(dateRange[1]).toDateString()}`.split(\" \");\r\n    return `${s[1]} ${s[2]} ${s[3]} - ${e[1]} ${e[2]} ${e[3]} `\r\n  }\r\n  const { calOpen } = useSelector((state: any) => state.billing || {});\r\n\r\n  const dispatch = useDispatch();\r\n  const dateChangeFn = (date: any) => {\r\n    if (date[1] != null) {\r\n      dispatch(updateCal(false));\r\n      setDateRange(date);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={DateFnsUtils}>\r\n      <DateRangePicker\r\n        onOpen={() => { setDateRange([dateRange[0], null]) }}\r\n        open={calOpen}\r\n        startText=\"from\"\r\n        endText=\"to\"\r\n        value={dateRange}\r\n        onChange={(date: any) => dateChangeFn(date)}\r\n        renderInput={(startProps: any, endProps: any) => (\r\n          <div style={{position:'relative'}}>\r\n            <button onClick={() => dispatch(updateCal(!calOpen))} className=\"showDate\">\r\n              {(dateRange[0] == null && dateRange[1] == null) ? 'Select date' : getDate(dateRange)}\r\n              {/* {(dateRange[0] != null && dateRange[1] != null) && <span className=\"closeDate\"><CloseIcon onClick={()=>{setDateRange([null,null])}} /></span>} */}\r\n\r\n              <span className=\"cal\"><CalendarMonthIcon /></span>\r\n            </button>\r\n            {(dateRange[0] != null && dateRange[1] != null) && <span className=\"closeDate\"><CloseIcon onClick={()=>{setDateRange([null,null])}} /></span>}\r\n\r\n          </div>\r\n        )\r\n        }\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { CSVLink } from 'react-csv'\r\nimport { typeVar, billingKeys } from '../../../utils/constants'\r\nimport useLocales from '../../../hooks/useLocales'\r\nimport Export from '../icons/export'\r\nimport RotateRightIcon from '@mui/icons-material/RotateRight';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { DateSelect } from './DateSelect';\r\nexport const Actions = ({\r\n    data,\r\n    pagination,\r\n    changeTake,\r\n    setDateRange,\r\n    dateRange,\r\n}: any) => {\r\n    const { t } = useLocales()\r\n    const modifyTake = (e: any) => {\r\n        changeTake(+e.target.value)\r\n    }\r\n    const [loading, setLoading] = useState(false)\r\n    const [completed, setCompleted] = useState(false)\r\n    const [dataStored, setDataStored] = useState(data)\r\n\r\n    // console.log(data)\r\n    useEffect(() => {\r\n        const l: any = document.getElementById('PageNumberInput')\r\n        l.value = pagination.take\r\n        setDataStored(dataStored)\r\n    }, [data])\r\n    const headers = [\r\n        { label: 'Invoice No.', key: billingKeys.INVOICE_NUMBER },\r\n        { label: 'Customer LE', key: billingKeys.CUSTOMER_LE },\r\n        { label: 'Tata Entity', key: billingKeys.TATA_ENTITY },\r\n        { label: 'PO number', key: billingKeys.PO_NUMBER },\r\n        { label: 'Payment Status', key: billingKeys.PAYMENT_STATUS },\r\n        { label: 'Invoice amt', key: billingKeys.INVOICE_AMOUNT },\r\n        { label: 'Invoice date', key: billingKeys.INVOICE_DATE },\r\n        { label: 'Due date', key: billingKeys.DUE_DATE },\r\n    ]\r\n\r\n    const downloadDetails = async () => {\r\n        if (!loading) {\r\n            setLoading(true)\r\n        }\r\n        if (await data !== null) {\r\n            setTimeout(() => {\r\n                setDataStored(data)\r\n                setLoading(false)\r\n                setCompleted(true)\r\n            }, 1000);\r\n            setTimeout(() => {\r\n                // setDataStored(data)\r\n                // setLoading(false)\r\n                setCompleted(false)\r\n            }, 2000);\r\n        }\r\n        return dataStored\r\n    }\r\n    const ExportToCsv = {\r\n        filename: 'InvoicesData.csv',\r\n        data: dataStored !== null && dataStored\r\n    }\r\n    return (\r\n        <div className=\"action__elements\">\r\n            <div className=\"action__elementItem\">\r\n                <div className=\"tableRow__show\">\r\n                    <div className=\"selectRow\">\r\n                        <select name=\"\" id=\"PageNumberInput\" onChange={modifyTake}>\r\n                            <option value=\"5\">{t<string>('showing')} 5</option>\r\n                            <option value=\"10\">{t<string>('showing')} 10</option>\r\n                            <option value=\"15\">{t<string>('showing')} 15</option>\r\n                            <option value=\"25\">{t<string>('showing')} 25</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"outOfRow\">\r\n                        <span id=\"results\">\r\n                            {t<string>('of')} {pagination.Total} {t<string>('results')}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"action__elementItem\" id=\"date-picker\">\r\n                <DateSelect setDateRange={setDateRange} dateRange={dateRange} />\r\n            </div>\r\n            <div className=\"action__elementItem\">\r\n                <span className=\"iconCta\">\r\n                    <span className=\"icon\">\r\n                        {loading ? <RotateRightIcon /> : completed ? <CheckIcon /> : <Export />}\r\n                    </span>\r\n                    {dataStored && (\r\n                        <CSVLink {...ExportToCsv} className=\"text\" asyncOnClick={true} onClick={downloadDetails} data-testid=\"csv-link\">\r\n                            {loading ? 'EXPORTING' : completed ? 'EXPORT COMPLETE' : t<string>('exportToCsv')}\r\n                        </CSVLink>)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst Overdue = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            type={typeVar.IMAGE_SVG}\r\n            width=\"43\"\r\n            height=\"43\"\r\n            viewBox=\"0 0 43 43\"\r\n        >\r\n            <g\r\n                id=\"Group_168523\"\r\n                data-name=\"Group 168523\"\r\n                transform=\"translate(-441.44 -269.75)\"\r\n            >\r\n                <circle\r\n                    id=\"Ellipse_646\"\r\n                    data-name=\"Ellipse 646\"\r\n                    cx=\"20\"\r\n                    cy=\"20\"\r\n                    r=\"20\"\r\n                    transform=\"translate(442.69 271)\"\r\n                    fill=\"#fff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    id=\"Path_13748\"\r\n                    data-name=\"Path 13748\"\r\n                    d=\"M100.61,9.363a21.274,21.274,0,1,0,15.019,6.231A21.251,21.251,0,0,0,100.61,9.363Zm0,40.667a19.44,19.44,0,1,1,13.724-5.694,19.418,19.418,0,0,1-13.724,5.694Z\"\r\n                    transform=\"translate(362.33 260.637)\"\r\n                    fill=\"#fff\"\r\n                    stroke=\"#fff\"\r\n                    strokeWidth=\"0.5\"\r\n                />\r\n                <path\r\n                    id=\"Path_13749\"\r\n                    data-name=\"Path 13749\"\r\n                    d=\"M340.166,173.465v-7.75a.916.916,0,0,0-1.832,0v8.13a.918.918,0,0,0,.268.648l5.858,5.858h0a.916.916,0,0,0,1.3-1.3Z\"\r\n                    transform=\"translate(123.689 117.406)\"\r\n                    fill=\"#fff\"\r\n                    stroke=\"#fff\"\r\n                    strokeWidth=\"0.5\"\r\n                />\r\n                <path\r\n                    id=\"Path_13750\"\r\n                    data-name=\"Path 13750\"\r\n                    d=\"M339.248,61.557a.916.916,0,0,0,.916-.916V59.248a.916.916,0,1,0-1.832,0v1.393A.916.916,0,0,0,339.248,61.557Z\"\r\n                    transform=\"translate(123.691 215.514)\"\r\n                    fill=\"#fff\"\r\n                    stroke=\"#fff\"\r\n                    strokeWidth=\"0.5\"\r\n                />\r\n                <path\r\n                    id=\"Path_13751\"\r\n                    data-name=\"Path 13751\"\r\n                    d=\"M339.248,468.31a.916.916,0,0,0-.916.916v1.394a.916.916,0,0,0,1.832,0v-1.394A.916.916,0,0,0,339.248,468.31Z\"\r\n                    transform=\"translate(123.691 -162.274)\"\r\n                    fill=\"#fff\"\r\n                    stroke=\"#fff\"\r\n                    strokeWidth=\"0.5\"\r\n                />\r\n                <path\r\n                    id=\"Path_13752\"\r\n                    data-name=\"Path 13752\"\r\n                    d=\"M126.779,272.2h-1.393a.916.916,0,0,0,0,1.832h1.393a.916.916,0,1,0,0-1.832Z\"\r\n                    transform=\"translate(320.762 18.438)\"\r\n                    fill=\"#fff\"\r\n                    stroke=\"#fff\"\r\n                    strokeWidth=\"0.5\"\r\n                />\r\n                <path\r\n                    id=\"Path_13753\"\r\n                    data-name=\"Path 13753\"\r\n                    d=\"M535.368,274.03h1.393a.916.916,0,0,0,0-1.832h-1.393a.916.916,0,1,0,0,1.832Z\"\r\n                    transform=\"translate(-57.029 18.439)\"\r\n                    fill=\"#fff\"\r\n                    stroke=\"#fff\"\r\n                    strokeWidth=\"0.5\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Overdue\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst PaidInvoice = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            type={typeVar.IMAGE_SVG}\r\n            width=\"34.379\"\r\n            height=\"41\"\r\n            viewBox=\"0 0 34.379 41\"\r\n        >\r\n            <g\r\n                id=\"Group_168502\"\r\n                data-name=\"Group 168502\"\r\n                transform=\"translate(-568.463 -402.501)\"\r\n            >\r\n                <path\r\n                    id=\"Path_13755\"\r\n                    data-name=\"Path 13755\"\r\n                    d=\"M569.487,405.357c-.065.851,0,36.053,0,36.053l5.693-4.776,5.3,6.02,5.365-6.02,5.5,6.02,5.431-6.02,5.365,4.776-.393-37.1a14.6,14.6,0,0,0-4.973-.785H571.058S569.553,404.507,569.487,405.357Z\"\r\n                    fill=\"#fff\"\r\n                    opacity=\"0.15\"\r\n                />\r\n                <path\r\n                    id=\"Path_13738\"\r\n                    data-name=\"Path 13738\"\r\n                    d=\"M172.019,97.95V64.906c0-.78-.005-1.554,0-2.334a1.756,1.756,0,0,1,1.743-1.763c.26-.005.52,0,.78,0h24.545c.846,0,1.692-.01,2.537,0a1.757,1.757,0,0,1,1.737,1.773V97.95c.29-.122.581-.239.871-.362q-2.362-2.01-4.723-4.015c-.224-.189-.443-.377-.667-.571a.517.517,0,0,0-.718,0q-2.362,2.591-4.724,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.668-.734a.507.507,0,0,0-.718,0q-2.362,2.591-4.723,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.667-.734a.517.517,0,0,0-.719,0q-2.362,2.01-4.723,4.015c-.224.189-.443.377-.668.571a.508.508,0,1,0,.718.718q2.362-2.01,4.723-4.015c.224-.189.443-.377.668-.571h-.719q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.723-5.177c.224-.245.448-.489.668-.734h-.718q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.724-5.177c.224-.245.448-.489.667-.734h-.718q2.362,2.01,4.723,4.015c.224.189.443.377.667.571a.518.518,0,0,0,.871-.362V64.7c0-.718.01-1.437,0-2.155a2.8,2.8,0,0,0-2.757-2.762c-.245-.005-.494,0-.739,0H176.243c-.825,0-1.656-.01-2.481,0a2.793,2.793,0,0,0-2.752,2.767v35.4a.5.5,0,0,0,1.009,0Z\"\r\n                    transform=\"translate(397.953 343.22)\"\r\n                    fill=\"#fff\"\r\n                    stroke=\"#fff\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"1\"\r\n                />\r\n                <path\r\n                    id=\"Path_13754\"\r\n                    data-name=\"Path 13754\"\r\n                    d=\"M208.651,169.916l-7.852,7.852-3.475-3.474a1.1,1.1,0,0,0-1.56,1.56l4.241,4.241a1.08,1.08,0,0,0,.766.328,1.035,1.035,0,0,0,.766-.328l8.591-8.591a1.09,1.09,0,0,0,0-1.56,1.016,1.016,0,0,0-1.477-.027Z\"\r\n                    transform=\"translate(383.706 244.548)\"\r\n                    fill=\"#fff\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default PaidInvoice\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst UnpaidInvoice = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            type={typeVar.IMAGE_SVG}\r\n            width=\"34.379\"\r\n            height=\"41\"\r\n            viewBox=\"0 0 34.379 41\"\r\n        >\r\n            <g\r\n                id=\"Group_168502\"\r\n                data-name=\"Group 168502\"\r\n                transform=\"translate(-568.463 -402.501)\"\r\n            >\r\n                <path\r\n                    id=\"Path_13757\"\r\n                    data-name=\"Path 13757\"\r\n                    d=\"M569.487,405.357c-.065.851,0,36.053,0,36.053l5.693-4.776,5.3,6.02,5.365-6.02,5.5,6.02,5.431-6.02,5.365,4.776-.393-37.1a14.6,14.6,0,0,0-4.973-.785H571.058S569.553,404.507,569.487,405.357Z\"\r\n                    transform=\"translate(-0.145 -0.652)\"\r\n                    fill=\"#fff\"\r\n                    opacity=\"0.15\"\r\n                />\r\n                <path\r\n                    id=\"Path_13738\"\r\n                    data-name=\"Path 13738\"\r\n                    d=\"M172.019,97.95V64.906c0-.78-.005-1.554,0-2.334a1.756,1.756,0,0,1,1.743-1.763c.26-.005.52,0,.78,0h24.545c.846,0,1.692-.01,2.537,0a1.757,1.757,0,0,1,1.737,1.773V97.95c.29-.122.581-.239.871-.362q-2.362-2.01-4.723-4.015c-.224-.189-.443-.377-.667-.571a.517.517,0,0,0-.718,0q-2.362,2.591-4.724,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.668-.734a.507.507,0,0,0-.718,0q-2.362,2.591-4.723,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.667-.734a.517.517,0,0,0-.719,0q-2.362,2.01-4.723,4.015c-.224.189-.443.377-.668.571a.508.508,0,1,0,.718.718q2.362-2.01,4.723-4.015c.224-.189.443-.377.668-.571h-.719q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.723-5.177c.224-.245.448-.489.668-.734h-.718q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.724-5.177c.224-.245.448-.489.667-.734h-.718q2.362,2.01,4.723,4.015c.224.189.443.377.667.571a.518.518,0,0,0,.871-.362V64.7c0-.718.01-1.437,0-2.155a2.8,2.8,0,0,0-2.757-2.762c-.245-.005-.494,0-.739,0H176.243c-.825,0-1.656-.01-2.481,0a2.793,2.793,0,0,0-2.752,2.767v35.4a.5.5,0,0,0,1.009,0Z\"\r\n                    transform=\"translate(397.953 343.22)\"\r\n                    fill=\"#fff\"\r\n                    stroke=\"#fff\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"1\"\r\n                />\r\n                <path\r\n                    id=\"Path_13756\"\r\n                    data-name=\"Path 13756\"\r\n                    d=\"M199.872,117.693a1.105,1.105,0,0,0-1.563,0l-4.534,4.534-4.534-4.534a1.105,1.105,0,0,0-1.563,1.563l4.534,4.533-4.533,4.534a1.105,1.105,0,1,0,1.563,1.563l4.534-4.534,4.534,4.534a1.105,1.105,0,1,0,1.563-1.563l-4.534-4.534,4.534-4.534a1.105,1.105,0,0,0,0-1.563Z\"\r\n                    transform=\"translate(391.879 295.839)\"\r\n                    fill=\"#fff\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default UnpaidInvoice\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst Download = () => {\r\n  return (\r\n    <svg\r\n      id=\"Group_168119\"\r\n      data-name=\"Group 168119\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      type={typeVar.IMAGE_SVG}\r\n      width=\"17.378\"\r\n      height=\"17.381\"\r\n      viewBox=\"0 0 17.378 17.381\"\r\n    >\r\n      <path\r\n        id=\"Path_13531\"\r\n        data-name=\"Path 13531\"\r\n        d=\"M472.458,421.715a1.019,1.019,0,0,1,.758.7,1.438,1.438,0,0,1,.036.4q0,4.427,0,8.855a.334.334,0,0,0,.03.222c.048-.045.093-.087.136-.13q1.02-1.019,2.04-2.038a.927.927,0,0,1,.951-.251.905.905,0,0,1,.677.711.959.959,0,0,1-.3.94q-1.076,1.071-2.147,2.147-.8.8-1.6,1.6a.976.976,0,0,1-1.517,0q-1.866-1.865-3.73-3.731a.971.971,0,0,1-.1-1.369.961.961,0,0,1,1.429-.031c.679.672,1.352,1.351,2.028,2.026.044.044.089.085.136.13a.327.327,0,0,0,.03-.221q0-4.444,0-8.889a.967.967,0,0,1,.766-1.053.112.112,0,0,0,.028-.019Z\"\r\n        transform=\"translate(-463.599 -421.715)\"\r\n        fill=\"#344857\"\r\n      />\r\n      <path\r\n        id=\"Path_13532\"\r\n        data-name=\"Path 13532\"\r\n        d=\"M471.165,465.005c-.043.209-.078.42-.132.626a3.834,3.834,0,0,1-3.685,2.866q-4.869.014-9.739,0a3.848,3.848,0,0,1-3.82-3.816q0-.5,0-1a.966.966,0,1,1,1.932-.008,9.848,9.848,0,0,0,.032,1.3,1.9,1.9,0,0,0,1.831,1.587c1.832.012,3.665.005,5.5.006q2.078,0,4.157,0a1.928,1.928,0,0,0,1.941-1.482,4.148,4.148,0,0,0,.052-.895,4.156,4.156,0,0,1,.021-.694.963.963,0,0,1,1.862-.128l.05.142Z\"\r\n        transform=\"translate(-453.787 -451.124)\"\r\n        fill=\"#344857\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Download\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\r\nimport { SnackbarContent } from '@material-ui/core';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RotateRightIcon from '@mui/icons-material/RotateRight';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\n\r\nexport default function Downlaoding({ open, SnakData, close }: any) {\r\n    const [state, setState] = React.useState<any>({\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n    });\r\n    const { vertical, horizontal } = state;\r\n\r\n\r\n    const action = (\r\n        <React.Fragment>\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={() => { close(false) }}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <Stack spacing={2} sx={{ maxWidth: 300 }} style={{ position: 'fixed', top: 100, right: 0, zIndex: 1000, maxWidth: '300px' }} className='cdr-downloading'>\r\n            {/* {buttons} */}\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={open}\r\n                autoHideDuration={7500}\r\n                action={action}\r\n                onClose={() => { close(false) }}\r\n                message={<div className='snackbar-content--container'>\r\n                    <IconButton aria-label=\"progress\">\r\n                        <RotateRightIcon />\r\n                    </IconButton>\r\n                    <div className='snackbar-content'>\r\n                        <p> {SnakData.type} is Downloading</p><p>The download of {SnakData.invoice} is in progress</p></div></div>}\r\n                key={vertical + horizontal}\r\n            />\r\n        </Stack>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\r\nimport { SnackbarContent } from '@material-ui/core';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\nexport default function Downloaded({ open, InvoiceId, close }: any) {\r\n    const [state, setState] = React.useState<any>({\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n    });\r\n    const { vertical, horizontal, } = state;\r\n\r\n    const handleClick = (newState: SnackbarOrigin) => () => {\r\n        setState({ ...newState });\r\n        close(true);\r\n    };\r\n\r\n\r\n    const buttons = (\r\n        <React.Fragment>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                })}\r\n            >\r\n\r\n            </Button>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const action = (\r\n        <React.Fragment>\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={() => { close(false) }}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <Stack spacing={2} style={{ position: 'fixed', top: 100, right: 0, zIndex: 1000, maxWidth: '300px' }} className='cdr-downloaded'>\r\n            {buttons}\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={open}\r\n                autoHideDuration={7500}\r\n                action={action}\r\n                onClose={() => { close(false) }}\r\n                message={<div className='snackbar-content--container'>\r\n                    <IconButton aria-label=\"done\">\r\n                        <CheckCircleIcon />\r\n                    </IconButton>\r\n                    <div className='snackbar-content'>\r\n                        <p>Successfully Downloaded!</p><p>The file {InvoiceId} has been downloaded Click on the link to open the file https://www.openfile.com/</p></div></div>}\r\n                key={vertical + horizontal}\r\n            />\r\n        </Stack>\r\n    );\r\n}\r\n","import * as React from 'react'\r\nimport Download from '../icons/download'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Divider from '@mui/material/Divider'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport {\r\n  useDispatch as useAppDispatch,\r\n} from '../../../redux/store'\r\nimport useLocales from '../../../hooks/useLocales'\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport Downlaoding from './loader-and-snackbar/Downlaoding'\r\nimport Downloaded from './loader-and-snackbar/Downlaoded'\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\n\r\nexport default function DownloadCdr({\r\n  item,\r\n  completed,\r\n  apiAction,\r\n  apiActionPdf,\r\n  inProgress\r\n}: any) {\r\n  const { t } = useLocales()\r\n  const dispatch = useAppDispatch()\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const [openSnack, SetOpenSnack] = React.useState(false);\r\n  const [openSnackdone, SetOpenSnackdone] = React.useState(false);\r\n  const [downloadStarted, SetdownloadStarted] = React.useState(false);\r\n\r\n\r\n  const [SnakData, setSnackData] = React.useState({ type: '', invoice: '', fileURl: '' });\r\n  const open = Boolean(anchorEl)\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const handleDownload = async (data: any) => {\r\n    SetOpenSnack(true);\r\n    setSnackData({ type: 'Invoice', invoice: data.id, fileURl: '' })\r\n    dispatch(apiActionPdf(data, (status: any) => {\r\n      SetOpenSnack(false);\r\n      setTimeout(() => {\r\n        if (status == true) {\r\n          // Handle error\r\n        } else {\r\n          setSnackData({ type: 'Invoice', invoice: data.id, fileURl: '' })\r\n          SetOpenSnackdone(true);\r\n        }\r\n      }, 10);\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  const handleDownloadCdr = (data: any) => {\r\n    SetdownloadStarted(true);\r\n    SetOpenSnack(true);\r\n    setSnackData({ type: 'CDR File', invoice: data.id, fileURl: '' })\r\n    dispatch(apiAction(data, (status: any) => {\r\n      SetOpenSnack(false);\r\n      setTimeout(() => {\r\n        if (status == true) {\r\n          // Handle error\r\n        } else {\r\n          SetOpenSnackdone(true);\r\n        }\r\n        SetdownloadStarted(false);\r\n      }, 10);\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Downlaoding open={openSnack} close={SetOpenSnack} SnakData={SnakData} />\r\n      <Downloaded open={openSnackdone} close={SetOpenSnackdone} SnakData={SnakData} />\r\n      {/* <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}> */}\r\n      <Tooltip title=\"DOWNLOAD\" className={downloadStarted ? 'downlaodIP' : '' }>\r\n        <IconButton\r\n          className=\"download-cdr\"\r\n          onClick={handleClick}\r\n          size=\"small\"\r\n          sx={{ ml: 2 }}\r\n          aria-controls={open ? 'account-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? 'true' : undefined}\r\n        >\r\n         {downloadStarted ? <CachedIcon/> : completed && item.id ? <CheckIcon /> : <Download />}\r\n        </IconButton>\r\n      </Tooltip>\r\n      {/* </Box> */}\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        id=\"account-menu\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        onClick={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            overflow: 'visible',\r\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n            mt: 1.5,\r\n            '& .MuiAvatar-root': {\r\n              width: 32,\r\n              height: 32,\r\n              ml: -0.5,\r\n              mr: 1,\r\n            },\r\n            '&:before': {\r\n              content: '\"\"',\r\n              display: 'block',\r\n              position: 'absolute',\r\n              top: 0,\r\n              right: 14,\r\n              width: 10,\r\n              height: 10,\r\n              bgcolor: 'background.paper',\r\n              transform: 'translateY(-50%) rotate(45deg)',\r\n              zIndex: 0,\r\n            },\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n      >\r\n        <MenuItem onClick={() => handleDownload(item)}>\r\n          {t<string>('invoice')}\r\n        </MenuItem>\r\n        <Divider />\r\n        <MenuItem className={`${inProgress ? 'downlaodIP' : ''}`} onClick={() => handleDownloadCdr(item)}>\r\n          {t<string>('cdr')}\r\n        </MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Table from '@mui/material/Table'\r\nimport {\r\n    ListItemIcon,\r\n    Tooltip,\r\n    Button,\r\n} from '@mui/material'\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator'\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Paper from '@mui/material/Paper'\r\nimport { styled } from '@mui/material/styles'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\r\nimport ArrowDownwardRoundedIcon from '@mui/icons-material/ArrowDownwardRounded';\r\nimport UnfoldMoreIcon from '@mui/icons-material/UnfoldMore'\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\r\nimport useLocales from '../../../hooks/useLocales'\r\nimport Pdf from '../icons/pdf'\r\nimport Ticket from '../icons/ticket'\r\nimport { Actions } from './Actions'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport Stack from '@mui/material/Stack'\r\nimport { setUlrParms } from '../../../utils/helpers'\r\nimport { useDispatch as useAppDispatch } from '../../../redux/store'\r\nimport Overdue from '../icons/overdue'\r\nimport PaidInvoice from '../icons/paidInvoice'\r\nimport UnpaidInvoice from '../icons/unpaidInvoice'\r\nimport DownloadCdr from './DownloadCdr'\r\nimport CDRDownloaded from './loader-and-snackbar/Downlaoded'\r\nimport { CSSProperties } from 'styled-components'\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Menu as TbMenu, MenuItem as TbMenuItem, MenuButton, ClickEvent } from '@szhsin/react-menu'\r\nimport '@szhsin/react-menu/dist/index.css'\r\nimport '@szhsin/react-menu/dist/transitions/slide.css'\r\nimport { blue } from '@material-ui/core/colors'\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}))\r\n\r\nconst DataTable = ({\r\n    TableData,\r\n    sortAction,\r\n    Total,\r\n    clearFilterClm,\r\n    pageAction,\r\n    take,\r\n    filterAction,\r\n    ClmSearch,\r\n    page,\r\n    clearAllfilter,\r\n    handleShow,\r\n    handledownloadPdf,\r\n    handledownloadCdrPdf,\r\n    setDateRange,\r\n    dateRange,\r\n    handledownloadViewpdf,\r\n    filterValues,\r\n    inProgress\r\n}: any) => {\r\n    const { t } = useLocales()\r\n    const { data, columns, tableName, allMasterData } = TableData\r\n    const dispatch = useAppDispatch()\r\n    const totalCount = Math.ceil(Total / take)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [completed, setCompleted] = useState(false)\r\n\r\n    function useHover(\r\n        styleOnHover: CSSProperties,\r\n        styleOnNotHover: CSSProperties = {}\r\n    ) {\r\n        const [style, setStyle] = React.useState(styleOnNotHover)\r\n        const onMouseEnter = () => setStyle(styleOnHover)\r\n        const onMouseLeave = () => setStyle(styleOnNotHover)\r\n        return { style, onMouseEnter, onMouseLeave }\r\n    }\r\n    const hover = useHover({ borderColor: 'green', userSelect: 'none' })\r\n\r\n    const changeTake = (take: any) => {\r\n        updateData(page, take)\r\n    }\r\n    const changePage = (da: any, pageNumber: any) => {\r\n        updateData(pageNumber, take)\r\n    }\r\n    const updateData = (page: any, take: any) => {\r\n        if (take * page > Total) {\r\n            dispatch(pageAction(Math.ceil(Total / take), take))\r\n            setUlrParms(page, take)\r\n        } else {\r\n            dispatch(pageAction(page, take))\r\n            setUlrParms(page, take)\r\n        }\r\n    }\r\n    const handleViewPdf = (data: any) => {\r\n        dispatch(handledownloadViewpdf(data))\r\n    }\r\n    // Vertical Dropdown code\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => { setAnchorEl(null) }\r\n\r\n    const [isHover, setIsHover] = useState(false)\r\n    const handleMouseEnter = () => {\r\n        setIsHover(true)\r\n    }\r\n    const handleMouseLeave = () => {\r\n        setIsHover(false)\r\n    }\r\n\r\n    // overdue\r\n    const boxStyle = {\r\n        // border: '2px solid grey',\r\n        // margin: '10px 0px',\r\n    }\r\n    // pending\r\n    const pendingStyle = {\r\n        // border: '2px solid red',\r\n        // margin: '10px 0px',\r\n    }\r\n    // completed\r\n    const completedStyle = {\r\n        // border: '2px solid green',\r\n        // margin: '10px 0px',\r\n    }\r\n    const noStyle = {\r\n        // cursor: 'pointer',\r\n    }\r\n\r\n\r\n\r\n\r\n    const result1: any[] = []\r\n    const [tableData, setTableData] = useState(data)\r\n    const onSearch = (e: any, head: any, index: any) => {\r\n        const filterData = tableData.filter((obj: any) =>\r\n            obj[head['eleName']].toString().includes(e.target.value)\r\n        )\r\n        setTableData(filterData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTableData(data)\r\n    }, [data])\r\n\r\n\r\n\r\n    const onSortAscending = (e: any, head: any, index: any) => {\r\n\r\n        if (index == 0 || index == 3) {\r\n            const sortedDataAscending = [...data].sort(\r\n                (a: any, b: any) => a[head['eleName']] - b[head['eleName']]\r\n            )\r\n            setTableData(sortedDataAscending)\r\n        } else {\r\n            const sortedDataAscending = [...data].sort((a: any, b: any) =>\r\n                a[head['eleName']].localeCompare(b[head['eleName']])\r\n            )\r\n            setTableData(sortedDataAscending)\r\n        }\r\n    }\r\n    const onSortDescending = (e: any, head: any, index: any) => {\r\n        if (index == 0 || index == 3) {\r\n            const sortedDataDescending = [...data].sort(\r\n                (a: any, b: any) => b[head['eleName']] - a[head['eleName']]\r\n            )\r\n            setTableData(sortedDataDescending)\r\n        } else {\r\n            const sortedDataDescending = [...data].sort((a: any, b: any) =>\r\n                b[head['eleName']].localeCompare(a[head['eleName']])\r\n            )\r\n            setTableData(sortedDataDescending)\r\n        }\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        setTableData(data)\r\n    }\r\n    const clearFilterMasterData = () => {\r\n        setTableData(data)\r\n    }\r\n\r\n    const downloadCompleteShowing = async () => {\r\n        if (loading) {\r\n            if (await !loading) {\r\n                return <CDRDownloaded />\r\n            } else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    const [columnsDropdown, setColumnsDropdown] = useState(result1);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setColumnsDropdown(columns);\r\n    }, [])\r\n\r\n    const allowDrop = (ev: any) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    const drag = (ev: any, item: any, index: any) => {\r\n        ev.dataTransfer.setData(\"columnData\", JSON.stringify({ ...item, index }));\r\n    }\r\n\r\n    const drop = (ev: any) => {\r\n        ev.preventDefault();\r\n        const data = JSON.parse(ev.dataTransfer.getData(\"columnData\"));\r\n        if (ev.target.id) {\r\n            const draggedPosition = ev.target.id.split('-');\r\n            // let draggedPosition = ;      \r\n            const col = [...columnsDropdown].filter((val, ind) => ind !== data['index']);\r\n            delete data['index'];\r\n            col.splice(parseInt(draggedPosition[1]), 0, data);\r\n            setColumnsDropdown(col);\r\n        }\r\n    }\r\n\r\n    const [drops, setdrops] = useState('');\r\n    const [hiddenClms, SetHiddentClmns] = useState<any>([]);\r\n\r\n    const changeActive = (item: any) => {\r\n        const i = hiddenClms.indexOf(`${item}`);\r\n        if (i == -1) {\r\n            SetHiddentClmns((s: any) => [...s, item]);\r\n        } else {\r\n            const m = hiddenClms;\r\n            m.splice(i, 1);\r\n            SetHiddentClmns((s: any) => m);\r\n        }\r\n    }\r\n\r\n\r\n    const getValue = () => {\r\n        return 'vdf'\r\n    }\r\n    return (\r\n        <>\r\n            {downloadCompleteShowing}\r\n            <Actions\r\n                setDateRange={setDateRange}\r\n                dateRange={dateRange}\r\n                data={allMasterData}\r\n                pagination={{ take, Total }}\r\n                changeTake={(e: any) => {\r\n                    changeTake(e)\r\n                }}\r\n            />\r\n            <TableContainer component={Paper} className=\"table__Container buildfix4\">\r\n                <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n                    <TableHead className=\"TableHead\" id=\"table-head-element-display-fix\">\r\n                        <TableRow id=\"table-head\">\r\n                            <StyledTableCell>\r\n                                <TbMenu\r\n                                    menuButton={\r\n                                        <MenuButton id=\"border-removing\">\r\n                                            <MoreVertIcon />\r\n                                        </MenuButton>\r\n                                    }\r\n                                    transition\r\n                                    onDragOver={allowDrop} onDrop={drop}\r\n                                >\r\n                                    {columnsDropdown.map((item: any, index: any) => {\r\n                                        return (\r\n                                            <>\r\n                                                <TbMenuItem\r\n                                                    key={index}\r\n                                                    className=\"list-item\"\r\n                                                    draggable={true}\r\n                                                    onDragStart={(ev) => drag(ev, item, index)}\r\n                                                    id={`${item.eleName}-${index}`}\r\n                                                >\r\n                                                    <ListItemIcon>\r\n                                                        <DragIndicatorIcon fontSize=\"small\" />\r\n                                                        {hiddenClms.includes(item.eleName) ? (<CheckBoxOutlineBlankIcon\r\n                                                            onClick={(e) => {\r\n                                                                changeActive(item.eleName)\r\n                                                            }}\r\n                                                            fontSize=\"small\"\r\n                                                        />) : (\r\n                                                            <CheckBoxIcon\r\n                                                                onClick={(e) => changeActive(item.eleName)}\r\n                                                                fontSize=\"small\"\r\n                                                            />\r\n                                                        )}\r\n                                                    </ListItemIcon>\r\n                                                    <Button\r\n                                                        onClick={(e) => {\r\n                                                            changeActive(item.eleName)\r\n                                                        }}\r\n                                                        style={{'color':'black'}}\r\n                                                    >\r\n                                                        {item.headTrans}\r\n                                                    </Button>\r\n                                                </TbMenuItem>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n                                </TbMenu>\r\n                            </StyledTableCell>\r\n                            {/* Table Heads */}\r\n                            {columnsDropdown.map((head: any, index: any) => (\r\n                                !hiddenClms.includes(head.eleName) && <StyledTableCell\r\n                                    key={`${head.headTrans}${index}`}\r\n                                    align=\"right\"\r\n                                    sx={{ minWidth: '160px' }}\r\n                                >\r\n                                    <div className=\"th_wrapper\">\r\n                                        <button\r\n                                            id=\"hiding\"\r\n                                            name={t<string>(`tables.${tableName}.${head.headTrans}`)}\r\n                                            className=\"voidBtn\"\r\n                                            key={`clickkey-${head.headTrans}${index}`}\r\n                                        >\r\n                                            {t<string>(`tables.${tableName}.${head.headTrans}`)}\r\n                                            {(head.sort || head.search || head.filter) && (\r\n                                                <>\r\n                                                    <div className='customer-le-menu'>\r\n                                                        <Button\r\n                                                            id=\"basic-button\"\r\n                                                            aria-controls={drops == head.headTrans ? 'basic-menu' : undefined}\r\n                                                            aria-haspopup=\"true\"\r\n                                                            aria-expanded={drops == head.headTrans ? 'true' : undefined}\r\n                                                            onClick={(e) => {\r\n                                                                handleClick(e);\r\n                                                                if (drops == head.headTrans) {\r\n                                                                    setdrops('')\r\n                                                                } else {\r\n                                                                    setdrops(head.headTrans);\r\n                                                                    setTimeout(() => {\r\n                                                                        if (head.search) {\r\n                                                                            const m: any = document.getElementById(`${head.headTrans}${tableName}${head.eleName}`);\r\n                                                                            const p = filterValues.filter((g: any) => g.element == head.eleName);\r\n                                                                            if (p.length > 0) {\r\n                                                                                if (p[0].values[0]) {\r\n                                                                                    m.value = p[0].values[0]\r\n                                                                                }\r\n                                                                            }\r\n                                                                        }\r\n\r\n                                                                        if (head.filter) {\r\n                                                                            const p = filterValues.filter((g: any) => g.element == head.filterData?.element);\r\n                                                                            if (p.length > 0) {\r\n                                                                                p[0].values.map((f: any) => {\r\n                                                                                    const m: any = document.getElementById(`${head.eleName}${f}status-check-box`);\r\n                                                                                    m.checked = true\r\n\r\n                                                                                })\r\n                                                                            }\r\n                                                                        }\r\n                                                                    }, 300);\r\n\r\n                                                                }\r\n                                                            }}\r\n                                                            startIcon={<UnfoldMoreIcon />}\r\n                                                        >\r\n                                                        </Button>\r\n                                                        <Menu\r\n                                                            id={`basic-menu`}\r\n                                                            anchorEl={anchorEl}\r\n                                                            open={drops == head.headTrans}\r\n                                                            onClose={() => {\r\n                                                                handleClose();\r\n                                                                if (drops == head.headTrans) {\r\n                                                                    setdrops('')\r\n                                                                } else {\r\n                                                                    setdrops(head.headTrans);\r\n                                                                }\r\n                                                            }}\r\n                                                            MenuListProps={{\r\n                                                                'aria-labelledby': 'basic-button',\r\n                                                            }}\r\n                                                        >\r\n                                                            {head.search ? <MenuItem>\r\n                                                                <input\r\n                                                                    id={`${head.headTrans}${tableName}${head.eleName}`}\r\n                                                                    onInput={(e: any) => {\r\n                                                                        dispatch(ClmSearch(head.eleName, e.target.value))\r\n                                                                    }} type='search' placeholder='search' className='inside_search' />\r\n                                                            </MenuItem> : null}\r\n                                                            {head.filter &&\r\n                                                                <div className='FilterItems'>\r\n                                                                    {head.filterData?.values && head.filterData.values.map((w: any, i: any) => {\r\n                                                                        return <MenuItem className='clkIgnr' key={`eleCheck-${w}-${i}`}>\r\n                                                                            <input id={`${head.eleName}${w}status-check-box`} onChange={(e) => {\r\n                                                                                dispatch(filterAction(head.filterData?.element, w, e.target.checked))\r\n                                                                            }} className='clkIgnr check-Box status-check-box' type=\"checkbox\" />\r\n                                                                            <label htmlFor={`${head.eleName}${w}status-check-box`} className='clkIgnr span-label'>{w}</label>\r\n                                                                        </MenuItem>\r\n                                                                    })}\r\n                                                                </div>\r\n                                                            }\r\n                                                            {head.sort ? <MenuItem onClick={() => { dispatch(sortAction(head, 1)) }} ><ArrowUpwardRoundedIcon />Sorting Ascending (A-Z)</MenuItem> : null}\r\n                                                            {head.sort ? <MenuItem onClick={() => { dispatch(sortAction(head, -1)) }} ><ArrowDownwardRoundedIcon />Sorting Descending (Z-A)</MenuItem> : null}\r\n                                                            <MenuItem onClick={() => {\r\n                                                                dispatch(clearFilterClm(head.eleName))\r\n                                                                if (head.search) {\r\n                                                                    const m: any = document.getElementById(`${head.headTrans}${tableName}${head.eleName}`);\r\n                                                                    m.value = ''\r\n                                                                }\r\n                                                                if (head.filter) {\r\n                                                                    head.filterData.values.map((w: any, i: any) => {\r\n                                                                        const m: any = document.getElementById(`${head.eleName}${w}status-check-box`);\r\n                                                                        m.checked = false\r\n                                                                    })\r\n                                                                }\r\n                                                            }}>CLEAR</MenuItem>\r\n                                                        </Menu>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </button>\r\n                                    </div>\r\n                                </StyledTableCell>\r\n                            ))}\r\n                            {(filterValues.length != 0 || `${filterValues.map((d: any) => d.values.length).filter((d: any) => d != 0).length}` != `0` )&&\r\n                                <StyledTableCell align=\"right\">\r\n                                    <Button onClick={() => { dispatch(clearAllfilter()) }} className=\"th_wrapper\">\r\n                                        <span className='clear-filters'>Clear all filters</span>\r\n                                    </Button>\r\n                                </StyledTableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    {/* Table Body */}\r\n                    <TableBody\r\n                        data-testid=\"table-body-element\"\r\n                        className=\"TableBody\"\r\n                        id=\"table-body-element\"\r\n                    >\r\n                        {data &&\r\n                            data.map((item: any, index: any) => (\r\n                                <TableRow\r\n                                    style={\r\n                                        isHover == true\r\n                                            ? item.icon == 'overdue'\r\n                                                ? boxStyle\r\n                                                : item.icon == 'pending'\r\n                                                    ? pendingStyle\r\n                                                    : item.icon == 'completed'\r\n                                                        ? completedStyle\r\n                                                        : noStyle\r\n                                            : noStyle\r\n                                    }\r\n                                    className={item.icon == 'overdue'\r\n                                    ? 'row-overdue'\r\n                                    : item.icon == 'pending'\r\n                                        ? 'row-pending'\r\n                                        : item.icon == 'completed'\r\n                                            ? 'row-completed'\r\n                                            : 'row-unknown'}\r\n                                    onMouseEnter={handleMouseEnter}\r\n                                    onMouseLeave={handleMouseLeave}\r\n                                    id=\"table-data\"\r\n                                    key={item.id}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\" className={`onlySVG ${item.icon}`}>\r\n                                        <a href=\"#/\">\r\n                                            {item.icon == 'overdue' && (\r\n                                                <span className=\"overdue\">\r\n                                                    <Overdue />\r\n                                                </span>\r\n                                            )}\r\n                                            {item.icon == 'pending' && (\r\n                                                <span className=\"pending\">\r\n                                                    <UnpaidInvoice />\r\n                                                </span>\r\n                                            )}\r\n                                            {item.icon == 'completed' && (\r\n                                                <span className=\"completed\">\r\n                                                    <PaidInvoice />\r\n                                                </span>\r\n                                            )}\r\n                                        </a>\r\n                                    </TableCell>\r\n                                    {columnsDropdown.map((clm: any, index: any) => (\r\n                                        !hiddenClms.includes(clm.eleName) &&\r\n                                        <>\r\n                                            <Tooltip\r\n                                                title={\r\n                                                    item[clm.eleName == 'Tata_Entity' ? clm.eleName : '']\r\n                                                }\r\n                                            >\r\n                                                <TableCell\r\n                                                    id=\"td-element\"\r\n                                                    className={`table-cell-tooltip ${item.icon}`}\r\n                                                    key={`tbl-clm${index}`}\r\n                                                    style={{ width: 160 }}\r\n                                                    align=\"right\"\r\n                                                >\r\n                                                    <span style={{ width: '160px', display: 'block' }}>{item[clm.eleName]}{' '}</span>\r\n                                                </TableCell>\r\n                                            </Tooltip>\r\n                                        </>\r\n                                    ))}\r\n                                    <TableCell style={{ width: 160 }} align=\"right\" className={`${item.icon}`}>\r\n                                        <ul className=\"actionButtons\">\r\n                                            <Tooltip title=\"VIEW INVOICE\">\r\n                                                <button\r\n                                                    className=\"actionButton__item\"\r\n                                                    onClick={() => handleViewPdf(item)}\r\n                                                >\r\n                                                    <span>\r\n                                                        {' '}\r\n                                                        <Pdf />{' '}\r\n                                                    </span>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"RAISE A TICKET\">\r\n                                                <button\r\n                                                    className=\"actionButton__item\"\r\n                                                    onClick={(e) => {\r\n                                                        handleShow()\r\n                                                    }}\r\n                                                >\r\n                                                    <span>\r\n                                                        <Ticket />\r\n                                                    </span>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                            <DownloadCdr\r\n                                                completed={completed}\r\n                                                item={item}\r\n                                                inProgress={inProgress}\r\n                                                apiAction={handledownloadCdrPdf}\r\n                                                apiActionPdf={handledownloadPdf}\r\n                                            />\r\n                                        </ul>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Stack\r\n                spacing={3}\r\n                sx={{\r\n                    marginTop: 3,\r\n                }}\r\n            >\r\n                <Pagination\r\n                    onChange={changePage}\r\n                    page={page}\r\n                    className=\"tablePag\"\r\n                    count={totalCount}\r\n                    variant=\"outlined\"\r\n                    shape=\"rounded\"\r\n                />\r\n            </Stack>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataTable\r\n","/* eslint-disable react/no-unknown-property */\r\nimport { typeVar } from '../../../utils/constants'\r\n\r\nconst Invoice = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" type={typeVar.IMAGE_SVG}  width=\"34.379\" height=\"41\" viewBox=\"0 0 34.379 41\">\r\n  <g id=\"Group_168502\" data-name=\"Group 168502\" transform=\"translate(-568.463 -402.501)\">\r\n    <path id=\"Path_13738\" data-name=\"Path 13738\" d=\"M172.019,97.95V64.906c0-.78-.005-1.554,0-2.334a1.756,1.756,0,0,1,1.743-1.763c.26-.005.52,0,.78,0h24.545c.846,0,1.692-.01,2.537,0a1.757,1.757,0,0,1,1.737,1.773V97.95c.29-.122.581-.239.871-.362q-2.362-2.01-4.723-4.015c-.224-.189-.443-.377-.667-.571a.517.517,0,0,0-.718,0q-2.362,2.591-4.724,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.668-.734a.507.507,0,0,0-.718,0q-2.362,2.591-4.723,5.177c-.224.245-.448.489-.667.734h.718q-2.362-2.591-4.723-5.177c-.224-.245-.448-.489-.667-.734a.517.517,0,0,0-.719,0q-2.362,2.01-4.723,4.015c-.224.189-.443.377-.668.571a.508.508,0,1,0,.718.718q2.362-2.01,4.723-4.015c.224-.189.443-.377.668-.571h-.719q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.723-5.177c.224-.245.448-.489.668-.734h-.718q2.362,2.591,4.723,5.177c.224.245.448.489.668.734a.507.507,0,0,0,.718,0q2.362-2.591,4.724-5.177c.224-.245.448-.489.667-.734h-.718q2.362,2.01,4.723,4.015c.224.189.443.377.667.571a.518.518,0,0,0,.871-.362V64.7c0-.718.01-1.437,0-2.155a2.8,2.8,0,0,0-2.757-2.762c-.245-.005-.494,0-.739,0H176.243c-.825,0-1.656-.01-2.481,0a2.793,2.793,0,0,0-2.752,2.767v35.4a.5.5,0,0,0,1.009,0Z\" transform=\"translate(397.953 343.22)\" fill=\"#1a73e8\" stroke=\"#1a73e8\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/>\r\n    <path id=\"Path_13739\" data-name=\"Path 13739\" d=\"M263.564,159.481H245.679c-.239,0-.494-.02-.734,0h-.036l.51.51v-7.032l-.51.51h17.885c.24,0,.494.02.734,0h.036l-.51-.51v7.032a.51.51,0,0,0,1.019,0v-7.032a.518.518,0,0,0-.51-.51H247.212c-.754,0-1.513-.031-2.268,0h-.036a.518.518,0,0,0-.51.51v7.032a.518.518,0,0,0,.51.51h16.351c.754,0,1.513.031,2.268,0h.036a.51.51,0,0,0,0-1.019Z\" transform=\"translate(331.402 259.198)\" fill=\"#1a73e8\" stroke=\"#1a73e8\" strokeLinecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/>\r\n    <path id=\"Path_13740\" data-name=\"Path 13740\" d=\"M263.725,315.418H247.373c-.754,0-1.513-.031-2.267,0h-.036a.51.51,0,0,0,0,1.019h16.351c.754,0,1.513.031,2.267,0h.036A.51.51,0,0,0,263.725,315.418Z\" transform=\"translate(331.241 111.414)\" fill=\"#1a73e8\" stroke=\"#1a73e8\" stroke-width=\"1\"/>\r\n  </g>\r\n</svg>        \r\n    )\r\n}\r\n\r\nexport default Invoice\r\n","import { useEffect, useState } from 'react'\r\nimport RaiseTicket from '../common/elements/RaiseTicket'\r\nimport DataTable from '../common/tables/DataTables'\r\nimport { BreadCrums } from '../common/elements/BreadCrum'\r\nimport { PageSearch } from '../common/elements/PageSearch'\r\nimport { breadCrums, dataTables } from '../../utils/constants'\r\nimport {\r\n    useDispatch as useAppDispatch,\r\n    useSelector\r\n} from '../../redux/store'\r\nimport { cardFilter, ChangePageBilling, viewBillingInvoice, downloadBillingInvoice, downloadBillingInvoiceCDR, filterData, loadInvoices, searchData, sortData, ClmSearch, removeCLmFilter, clearAllfilter } from '../../redux/slices/billingSlice'\r\nimport useLocales from '../../hooks/useLocales'\r\nimport Invoice from '../common/icons/invoice'\r\nimport Overdue from '../common/icons/overdue'\r\nimport PaidInvoice from '../common/icons/paidInvoice'\r\nimport UnpaidInvoice from '../common/icons/unpaidInvoice'\r\nimport Card from '../common/elements/card'\r\nimport { getCardCount } from '../../utils/helpers'\r\n\r\n\r\nexport const Billing = ({ toggleTheme }: { toggleTheme: any }) => {\r\n    \r\n\r\n    const { PageData = [], MasterData = [], total, page, take ,filterValue,downloadCRDInprogress} = useSelector((state: any) => state.billing || {});\r\n    const { dashBoardWidth } = useSelector((state: any) => state.common);\r\n\r\n    const [dateRange, setDateRange] = useState<any>([null, null]);\r\n    const getDate = (dateRange: any) => {\r\n        const s = `${new Date(dateRange).toLocaleDateString()}`.split(\"/\");\r\n        return `${s[2]}-${s[0]}-${s[1]}`\r\n    }\r\n    const dispatch = useAppDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(loadInvoices({ searchValue: \"\", fromDate: getDate(dateRange[0]), toDate: getDate(dateRange[1]) }))\r\n    }, [dispatch, dateRange])\r\n    const { t } = useLocales()\r\n    const cards = [\r\n        { titel: t('allInvoice'), value: getCardCount(MasterData, 'Payment_Status', ''), icon: <Invoice />, action: cardFilter(\"Payment_Status\", \"\") },\r\n        { titel: t('overdue'), value: getCardCount(MasterData, 'Payment_Status', 'overdue'), icon: <Overdue />, action: cardFilter(\"Payment_Status\", \"overdue\") },\r\n        { titel: t('unpaidInvoices'), value: getCardCount(MasterData, 'Payment_Status', 'pending'), icon: <UnpaidInvoice />, action: cardFilter(\"Payment_Status\", \"pending\") },\r\n        { titel: t('paidInvoices'), value: getCardCount(MasterData, 'Payment_Status', 'completed'), icon: <PaidInvoice />, action: cardFilter(\"Payment_Status\", \"completed\") },\r\n    ]\r\n\r\n    const [showIt, setShowIt] = useState(false);\r\n    const handleShow = () => {\r\n        setShowIt(!showIt);\r\n    };\r\n\r\n    const btnContainer = document.getElementById(\"main-div\");\r\n\r\n    // Get all buttons with class=\"btn\" inside the container\r\n    if (btnContainer) {\r\n        const btns = btnContainer.getElementsByClassName(\"cardType__1\");\r\n        if (btns !== undefined) {\r\n            for (let i = 0; i < btns.length; i++) {\r\n                btns[i].addEventListener(\"click\", function () {\r\n                    const current = document.getElementsByClassName(\"active\");\r\n                    current[0].classList.remove('active')\r\n                    btns[i].classList.add('active')\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div >\r\n            <RaiseTicket handleShow={handleShow} showIt={showIt} />\r\n            <div className=\"dashboard__content\" id=\"main-div-element\" style={{\r\n                // width: `${window.innerWidth - +`${dashBoardWidth}`.split('p')[0]}px`,\r\n                marginLeft: `${dashBoardWidth}`, width: `calc(100% - ${dashBoardWidth}.split('p')[0]}px`\r\n            }}>\r\n                <div className=\"content__header\">\r\n                    <BreadCrums data={breadCrums.BILLING} />\r\n                    <PageSearch searchFn={searchData} searchPlaceholder='searchInvoiceNoEntity' />\r\n                </div>\r\n                <div id=\"main-div\" className=\"card-wrapper-1\">\r\n                    {cards.map((q: any, i: any) => <Card cardData={cards} data={q} key={i} />)}\r\n                </div >\r\n                <DataTable\r\n                    handledownloadViewpdf={viewBillingInvoice}\r\n                    handledownloadPdf={downloadBillingInvoice}\r\n                    handledownloadCdrPdf={downloadBillingInvoiceCDR}\r\n                    handleShow={handleShow}\r\n                    pageAction={ChangePageBilling}\r\n                    sortAction={sortData}\r\n                    filterAction={filterData}\r\n                    clearFilterClm={removeCLmFilter}\r\n                    filterValues={filterValue}\r\n                    ClmSearch={ClmSearch}\r\n                    Total={total}\r\n                    page={page}\r\n                    take={take}\r\n                    setDateRange={setDateRange}\r\n                    dateRange={dateRange}\r\n                    clearAllfilter={clearAllfilter}\r\n                    inProgress={downloadCRDInprogress}\r\n                    TableData={dataTables.BILLING(PageData, MasterData)} />\r\n            </div>\r\n            {/* <ModalTicketError /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Billing\r\n"],"names":["id","xmlns","type","typeVar","width","height","viewBox","fill","clipPath","d","transform","stroke","strokeWidth","DateSelect","dateRange","setDateRange","getDate","s","Date","toDateString","split","e","calOpen","useSelector","state","billing","dispatch","useDispatch","LocalizationProvider","dateAdapter","DateFnsUtils","onOpen","open","startText","endText","value","onChange","date","updateCal","dateChangeFn","renderInput","startProps","endProps","style","position","onClick","className","CalendarMonth","Close","i","Actions","data","pagination","changeTake","t","useLocales","useState","loading","setLoading","completed","setCompleted","dataStored","setDataStored","useEffect","document","getElementById","take","billingKeys","downloadDetails","setTimeout","ExportToCsv","filename","name","target","Total","RotateRight","Check","CSVLink","asyncOnClick","cx","cy","r","opacity","strokeLinecap","strokeLinejoin","Downlaoding","SnakData","close","React","vertical","horizontal","action","IconButton","size","color","fontSize","Stack","spacing","sx","maxWidth","top","right","zIndex","Snackbar","anchorOrigin","autoHideDuration","onClose","message","invoice","Downloaded","newState","InvoiceId","setState","buttons","Button","CheckCircle","DownloadCdr","item","apiAction","apiActionPdf","inProgress","useAppDispatch","anchorEl","setAnchorEl","openSnack","SetOpenSnack","openSnackdone","SetOpenSnackdone","downloadStarted","SetdownloadStarted","fileURl","setSnackData","Boolean","handleClose","handleDownload","status","Tooltip","title","event","currentTarget","ml","undefined","Cached","Menu","PaperProps","elevation","overflow","filter","mt","mr","content","display","bgcolor","transformOrigin","MenuItem","Divider","StyledTableCell","styled","TableCell","theme","tableCellClasses","backgroundColor","palette","common","black","white","TableData","sortAction","clearFilterClm","pageAction","filterAction","ClmSearch","page","clearAllfilter","handleShow","handledownloadPdf","handledownloadCdrPdf","handledownloadViewpdf","filterValues","columns","tableName","allMasterData","totalCount","Math","ceil","styleOnHover","styleOnNotHover","useHover","borderColor","userSelect","updateData","setUlrParms","isHover","setIsHover","handleMouseEnter","handleMouseLeave","boxStyle","pendingStyle","completedStyle","noStyle","setTableData","downloadCompleteShowing","columnsDropdown","setColumnsDropdown","drops","setdrops","hiddenClms","SetHiddentClmns","changeActive","indexOf","m","splice","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","menuButton","MenuButton","MoreVert","transition","onDragOver","ev","preventDefault","onDrop","JSON","parse","dataTransfer","getData","draggedPosition","col","val","ind","parseInt","map","index","draggable","onDragStart","setData","stringify","drag","eleName","ListItemIcon","DragIndicator","includes","CheckBoxOutlineBlank","CheckBox","headTrans","head","align","sort","search","p","g","element","length","values","filterData","f","checked","startIcon","UnfoldMore","MenuListProps","onInput","placeholder","w","htmlFor","ArrowUpwardRounded","ArrowDownwardRounded","TableBody","icon","onMouseEnter","onMouseLeave","scope","href","clm","handleViewPdf","marginTop","Pagination","da","pageNumber","count","variant","shape","Billing","toggleTheme","PageData","MasterData","total","filterValue","downloadCRDInprogress","dashBoardWidth","toLocaleDateString","loadInvoices","searchValue","fromDate","toDate","cards","titel","getCardCount","cardFilter","showIt","setShowIt","btnContainer","btns","getElementsByClassName","addEventListener","classList","remove","add","RaiseTicket","marginLeft","BreadCrum","breadCrums","PageSearch","searchFn","searchData","searchPlaceholder","q","cardData","viewBillingInvoice","downloadBillingInvoice","downloadBillingInvoiceCDR","ChangePageBilling","sortData","removeCLmFilter","dataTables"],"sourceRoot":""}